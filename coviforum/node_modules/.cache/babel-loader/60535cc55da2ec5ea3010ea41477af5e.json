{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/coviforum/src/pages/new-board/index.js\";\nimport React, { useState } from \"react\";\nimport \"./new-board.css\";\nimport { addBoard } from \"../../board\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport TagsInput from \"react-tagsinput\"; // SOURCE-Click Handler: https://reactjs.org/docs/handling-events.html\n// Create a new message board\n\nconst NewBoard = props => {\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [error, setError] = useState(undefined);\n  const [boardId, setBoardId] = useState(undefined);\n  const [redirect, setRedirect] = useState(false); // Click handler\n  // SEE source-this has a bug\n\n  const handleClick = () => {\n    if (subject === \"\" || message === \"\") {\n      setError(\"All fields must be filled to continue. Please try again.\");\n      return;\n    }\n\n    var payload = {\n      subject: subject,\n      message: message,\n      tags: JSON.stringify(tags)\n    };\n    addBoard(payload).then(response => {\n      if (response.status === 200) {\n        // link to board page\n        setBoardId(response.data.id);\n        setRedirect(true);\n      } else if (response.status === 202) {\n        setError(response.data);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  if (redirect === true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/board/\" + boardId,\n        state: {\n          boardId: boardId\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Create a New Message Board\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"subject\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Topic: \"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"subject\",\n    alt: \"subject\",\n    name: \"subject\",\n    placeholder: \"Enter A Board Topic:\",\n    type: \"text\",\n    onChange: event => setSubject(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Message: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"message\",\n    alt: \"message\",\n    name: \"message\",\n    onChange: event => setMessage(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Tags: \"), /*#__PURE__*/React.createElement(TagsInput, {\n    inputProps: {\n      \"aria-label\": \"Add a custom tag to the new message board!\"\n    },\n    id: \"tags\",\n    value: tags,\n    onChange: setTags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": \"Create a New Board\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, error ? error : \"ERROR: Board creation failed. Please refresh the webpage.\"));\n};\n\nexport default withRouter(NewBoard);","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/coviforum/src/pages/new-board/index.js"],"names":["React","useState","addBoard","withRouter","Redirect","TagsInput","NewBoard","props","subject","setSubject","message","setMessage","tags","setTags","error","setError","undefined","boardId","setBoardId","redirect","setRedirect","handleClick","payload","JSON","stringify","then","response","status","data","id","catch","console","pathname","state","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./new-board.css\";\nimport { addBoard } from \"../../board\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport TagsInput from \"react-tagsinput\";\n// SOURCE-Click Handler: https://reactjs.org/docs/handling-events.html\n\n// Create a new message board\nconst NewBoard = (props) => {\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [error, setError] = useState(undefined);\n  const [boardId, setBoardId] = useState(undefined);\n  const [redirect, setRedirect] = useState(false);\n// Click handler\n// SEE source-this has a bug\n  const handleClick = () => {\n    if (subject === \"\" || message === \"\") {\n      setError(\"All fields must be filled to continue. Please try again.\");\n      return;\n    }\n    var payload = {\n      subject: subject,\n      message: message,\n      tags: JSON.stringify(tags),\n    };\n\n    addBoard(payload)\n      .then((response) => {\n        if (response.status === 200) {\n          // link to board page\n          setBoardId(response.data.id);\n          setRedirect(true);\n        } else if (response.status === 202) {\n          setError(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  if (redirect === true) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/board/\" + boardId,\n          state: { boardId: boardId },\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"new-board\">\n      <h1>Create a New Message Board</h1>\n\n      <div>\n        <label htmlFor=\"subject\">Topic: </label>\n        <input\n          id=\"subject\"\n          alt=\"subject\"\n          name=\"subject\"\n          placeholder=\"Enter A Board Topic:\"\n          type=\"text\"\n          onChange={(event) => setSubject(event.target.value)}\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor=\"message\">Message: </label>\n        <textarea\n          id=\"message\"\n          alt=\"message\"\n          name=\"message\"\n          onChange={(event) => setMessage(event.target.value)}\n        ></textarea>\n      </div>\n      <div>\n        <label htmlFor=\"tags\">Tags: </label>\n        <TagsInput\n          inputProps={{\n            \"aria-label\": \"Add a custom tag to the new message board!\",\n          }}\n          id=\"tags\"\n          value={tags}\n          onChange={setTags}\n        />\n      </div>\n\n      <button aria-label=\"Create a New Board\" onClick={handleClick}>\n        Submit\n      </button>\n\n      <div className=\"error\">{error ? error : \"ERROR: Board creation failed. Please refresh the webpage.\"}</div>\n    </div>\n  );\n};\n\nexport default withRouter(NewBoard);\n"]},"metadata":{},"sourceType":"module"}