{"ast":null,"code":"// SOURCE: https://dev.to/anilsingh/create-use-helper-functions-react-component-1jhj\n// Maybe some bugs here\nconst userController = require(\"../controllers/user.controller\");\n\nconst boardController = require(\"../controllers/board.controller\"); // Find user by ID\n\n\nconst doesUserExistByUserId = id => {\n  return new Promise((resolve, reject) => {\n    userController.readUser({\n      id\n    }).then(doc => {\n      if (doc && doc.length && doc.length > 0) {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    }).catch(() => {\n      // Catch errors\n      reject(\"Request failed. Please try again,\");\n    });\n  });\n}; // Find user by Email\n\n\nconst doesUserExist = email => {\n  return new Promise((resolve, reject) => {\n    userController.readUser({\n      email\n    }).then(doc => {\n      if (doc && doc.length && doc.length > 0) {\n        // Catch errors\n        reject(\"Request failed. Please try again,\");\n      } else {\n        resolve();\n      }\n    }).catch(() => {\n      // Catch errors\n      reject(\"Request failed. Please try again,\");\n    });\n  });\n}; // Find Board by ID\n\n\nconst doesBoardExistByBoardId = id => {\n  // return Promise or reject\n  // needs work\n  return new Promise((resolve, reject) => {\n    boardController.checkBoardID({\n      id\n    }).then(doc => {\n      if (doc && doc.length && doc.length > 0) {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    }).catch(() => {\n      // Catch errors\n      reject(\"Request failed. Please try again,\");\n    });\n  });\n};\n\nmodule.exports = {\n  doesUserExist,\n  doesUserExistByUserId,\n  doesBoardExistByBoardId\n};","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/coviforum/server/routes/helper.js"],"names":["userController","require","boardController","doesUserExistByUserId","id","Promise","resolve","reject","readUser","then","doc","length","catch","doesUserExist","email","doesBoardExistByBoardId","checkBoardID","module","exports"],"mappings":"AAAA;AACA;AACA,MAAMA,cAAc,GAAGC,OAAO,CAAC,gCAAD,CAA9B;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,iCAAD,CAA/B,C,CACA;;;AACA,MAAME,qBAAqB,GAAIC,EAAD,IAAQ;AACpC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,IAAAA,cAAc,CACXQ,QADH,CACY;AAAEJ,MAAAA;AAAF,KADZ,EAEGK,IAFH,CAESC,GAAD,IAAS;AACb,UAAIA,GAAG,IAAIA,GAAG,CAACC,MAAX,IAAqBD,GAAG,CAACC,MAAJ,GAAa,CAAtC,EAAyC;AACvCL,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAFD,MAEO;AACLA,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KARH,EASGM,KATH,CASS,MAAM;AACT;AACFL,MAAAA,MAAM,CAAC,mCAAD,CAAN;AACD,KAZH;AAaD,GAdM,CAAP;AAeD,CAhBD,C,CAkBA;;;AACA,MAAMM,aAAa,GAAIC,KAAD,IAAW;AAC/B,SAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,IAAAA,cAAc,CACXQ,QADH,CACY;AAAEM,MAAAA;AAAF,KADZ,EAEGL,IAFH,CAESC,GAAD,IAAS;AACb,UAAIA,GAAG,IAAIA,GAAG,CAACC,MAAX,IAAqBD,GAAG,CAACC,MAAJ,GAAa,CAAtC,EAAyC;AAC3B;AACdJ,QAAAA,MAAM,CAAC,mCAAD,CAAN;AACC,OAHD,MAGO;AACLD,QAAAA,OAAO;AACR;AACF,KATH,EAUGM,KAVH,CAUS,MAAM;AACC;AACZL,MAAAA,MAAM,CAAC,mCAAD,CAAN;AACD,KAbH;AAcD,GAfM,CAAP;AAgBD,CAjBD,C,CAmBA;;;AACA,MAAMQ,uBAAuB,GAAIX,EAAD,IAAQ;AACxC;AACA;AACE,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCL,IAAAA,eAAe,CACZc,YADH,CACgB;AAAEZ,MAAAA;AAAF,KADhB,EAEGK,IAFH,CAESC,GAAD,IAAS;AACb,UAAIA,GAAG,IAAIA,GAAG,CAACC,MAAX,IAAqBD,GAAG,CAACC,MAAJ,GAAa,CAAtC,EAAyC;AACvCL,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAFD,MAEO;AACLA,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KARH,EASGM,KATH,CASS,MAAM;AACC;AACZL,MAAAA,MAAM,CAAC,mCAAD,CAAN;AACD,KAZH;AAaD,GAdM,CAAP;AAeD,CAlBD;;AAoBAU,MAAM,CAACC,OAAP,GAAiB;AACfL,EAAAA,aADe;AAEfV,EAAAA,qBAFe;AAGfY,EAAAA;AAHe,CAAjB","sourcesContent":["// SOURCE: https://dev.to/anilsingh/create-use-helper-functions-react-component-1jhj\n// Maybe some bugs here\nconst userController = require(\"../controllers/user.controller\");\nconst boardController = require(\"../controllers/board.controller\");\n// Find user by ID\nconst doesUserExistByUserId = (id) => {\n  return new Promise((resolve, reject) => {\n    userController\n      .readUser({ id })\n      .then((doc) => {\n        if (doc && doc.length && doc.length > 0) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      })\n      .catch(() => {\n          // Catch errors\n        reject(\"Request failed. Please try again,\");\n      });\n  });\n};\n\n// Find user by Email\nconst doesUserExist = (email) => {\n  return new Promise((resolve, reject) => {\n    userController\n      .readUser({ email })\n      .then((doc) => {\n        if (doc && doc.length && doc.length > 0) {\n                      // Catch errors\n        reject(\"Request failed. Please try again,\");\n        } else {\n          resolve();\n        }\n      })\n      .catch(() => {\n                    // Catch errors\n        reject(\"Request failed. Please try again,\");\n      });\n  });\n};\n\n// Find Board by ID\nconst doesBoardExistByBoardId = (id) => {\n// return Promise or reject\n// needs work\n  return new Promise((resolve, reject) => {\n    boardController\n      .checkBoardID({ id })\n      .then((doc) => {\n        if (doc && doc.length && doc.length > 0) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      })\n      .catch(() => {\n                    // Catch errors\n        reject(\"Request failed. Please try again,\");\n      });\n  });\n};\n\nmodule.exports = {\n  doesUserExist,\n  doesUserExistByUserId,\n  doesBoardExistByBoardId,\n};\n"]},"metadata":{},"sourceType":"script"}