{"ast":null,"code":"const fs = require(\"fs\"); // Get environment\n\n\nlet env = process.argv.indexOf(\"-env\") === -1 ? process.env[\"ENV\"] || \"localhost\" : process.argv[process.argv.indexOf(\"-env\") + 1]; // read config file when developing\n\nlet configJson = {};\n\nif (env === \"localhost\") {\n  try {\n    // Get current folder\n    configJson = JSON.parse(fs.readFileSync(__dirname + \"/config.json\").toString());\n  } catch (err) {\n    console.warn(\"No config.json file was found for this repository\");\n  }\n} else {\n  // use env variables when on deploy server\n  let port = process.argv.indexOf(\"-port\") === -1 ? process.env[\"PORT\"] || \"3000\" : process.argv[process.argv.indexOf(\"-port\") + 1];\n  let uri = process.argv.indexOf(\"-uri\") === -1 ? process.env[\"URI\"] || \"\" : process.argv[process.argv.indexOf(\"-uri\") + 1];\n  configJson[env] = {\n    port,\n    mongo: {\n      uri\n    }\n  };\n} // Set env config\n\n\nlet envConfig = configJson[env] || {};\nenvConfig[\"env\"] = env; // Export the config\n\nmodule.exports = envConfig;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/coviforum/server/configs/config.js"],"names":["fs","require","env","process","argv","indexOf","configJson","JSON","parse","readFileSync","__dirname","toString","err","console","warn","port","uri","mongo","envConfig","module","exports"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB,C,CAEA;;;AACA,IAAIC,GAAG,GACLC,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqB,MAArB,MAAiC,CAAC,CAAlC,GACIF,OAAO,CAACD,GAAR,CAAY,KAAZ,KAAsB,WAD1B,GAEIC,OAAO,CAACC,IAAR,CAAaD,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqB,MAArB,IAA+B,CAA5C,CAHN,C,CAKA;;AACA,IAAIC,UAAU,GAAG,EAAjB;;AACA,IAAIJ,GAAG,KAAK,WAAZ,EAAyB;AACvB,MAAI;AACF;AACAI,IAAAA,UAAU,GAAGC,IAAI,CAACC,KAAL,CACXR,EAAE,CAACS,YAAH,CAAgBC,SAAS,GAAG,cAA5B,EAA4CC,QAA5C,EADW,CAAb;AAGD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,IAAR,CAAa,mDAAb;AACD;AACF,CATD,MASO;AACL;AACA,MAAIC,IAAI,GACNZ,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqB,OAArB,MAAkC,CAAC,CAAnC,GACIF,OAAO,CAACD,GAAR,CAAY,MAAZ,KAAuB,MAD3B,GAEIC,OAAO,CAACC,IAAR,CAAaD,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqB,OAArB,IAAgC,CAA7C,CAHN;AAIA,MAAIW,GAAG,GACLb,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqB,MAArB,MAAiC,CAAC,CAAlC,GACIF,OAAO,CAACD,GAAR,CAAY,KAAZ,KAAsB,EAD1B,GAEIC,OAAO,CAACC,IAAR,CAAaD,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqB,MAArB,IAA+B,CAA5C,CAHN;AAKAC,EAAAA,UAAU,CAACJ,GAAD,CAAV,GAAkB;AAChBa,IAAAA,IADgB;AAEhBE,IAAAA,KAAK,EAAE;AACLD,MAAAA;AADK;AAFS,GAAlB;AAMD,C,CAED;;;AACA,IAAIE,SAAS,GAAGZ,UAAU,CAACJ,GAAD,CAAV,IAAmB,EAAnC;AACAgB,SAAS,CAAC,KAAD,CAAT,GAAmBhB,GAAnB,C,CAEA;;AACAiB,MAAM,CAACC,OAAP,GAAiBF,SAAjB","sourcesContent":["const fs = require(\"fs\");\n\n// Get environment\nlet env =\n  process.argv.indexOf(\"-env\") === -1\n    ? process.env[\"ENV\"] || \"localhost\"\n    : process.argv[process.argv.indexOf(\"-env\") + 1];\n\n// read config file when developing\nlet configJson = {};\nif (env === \"localhost\") {\n  try {\n    // Get current folder\n    configJson = JSON.parse(\n      fs.readFileSync(__dirname + \"/config.json\").toString()\n    );\n  } catch (err) {\n    console.warn(\"No config.json file was found for this repository\");\n  }\n} else {\n  // use env variables when on deploy server\n  let port =\n    process.argv.indexOf(\"-port\") === -1\n      ? process.env[\"PORT\"] || \"3000\"\n      : process.argv[process.argv.indexOf(\"-port\") + 1];\n  let uri =\n    process.argv.indexOf(\"-uri\") === -1\n      ? process.env[\"URI\"] || \"\"\n      : process.argv[process.argv.indexOf(\"-uri\") + 1];\n\n  configJson[env] = {\n    port,\n    mongo: {\n      uri,\n    },\n  };\n}\n\n// Set env config\nlet envConfig = configJson[env] || {};\nenvConfig[\"env\"] = env;\n\n// Export the config\nmodule.exports = envConfig;\n"]},"metadata":{},"sourceType":"script"}