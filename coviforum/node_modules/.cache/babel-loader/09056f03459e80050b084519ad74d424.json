{"ast":null,"code":"const mongoClient = require(\"../configs/mongoClient\"); // Reference: https://bezkoder.com/node-js-mongodb-auth-jwt/\n\n\nconst addLocation = (long, lat) => {\n  return new Promise((resolve, reject) => {\n    mongoClient.getDatabase().connection.collection(\"location\").updateOne({\n      long,\n      lat\n    }, {\n      $set: {\n        long,\n        lat\n      }\n    }, {\n      upsert: true\n    }).then((result, err) => {\n      if (err) {\n        console.error(\"error: addLocation\", err);\n        reject(\"Failed to add location to database\");\n      } else {\n        // The mongo success result is on the following data structure\n        // result.ops: this is an array\n        if (result.ops && result.result && result.result.ok > 0) {\n          resolve();\n        } else {\n          resolve(undefined);\n        }\n      }\n    });\n  });\n};\n\nconst getLocations = () => {\n  return new Promise((resolve, reject) => {\n    mongoClient.getDatabase().connection.collection(\"location\").find({}, {\n      projection: {\n        _id: 0\n      }\n    }).toArray((err, docs) => {\n      if (err) {\n        console.error(\"error: getLocations\", err);\n        reject(\"Failed to get all locations from database\");\n      } else {\n        resolve(docs);\n      }\n    });\n  });\n};\n\nmodule.exports = {\n  addLocation,\n  getLocations\n};","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/coviforum/server/controllers/location.controller.js"],"names":["mongoClient","require","addLocation","long","lat","Promise","resolve","reject","getDatabase","connection","collection","updateOne","$set","upsert","then","result","err","console","error","ops","ok","undefined","getLocations","find","projection","_id","toArray","docs","module","exports"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,wBAAD,CAA3B,C,CACA;;;AACA,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AACjC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,IAAAA,WAAW,CACRQ,WADH,GAEGC,UAFH,CAEcC,UAFd,CAEyB,UAFzB,EAGGC,SAHH,CAII;AACER,MAAAA,IADF;AAEEC,MAAAA;AAFF,KAJJ,EAQI;AAAEQ,MAAAA,IAAI,EAAE;AAAET,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAR,KARJ,EASI;AAAES,MAAAA,MAAM,EAAE;AAAV,KATJ,EAWGC,IAXH,CAWQ,CAACC,MAAD,EAASC,GAAT,KAAiB;AACrB,UAAIA,GAAJ,EAAS;AACPC,QAAAA,OAAO,CAACC,KAAR,CAAc,oBAAd,EAAoCF,GAApC;AACAT,QAAAA,MAAM,CAAC,oCAAD,CAAN;AACD,OAHD,MAGO;AACL;AACA;AACA,YAAIQ,MAAM,CAACI,GAAP,IAAcJ,MAAM,CAACA,MAArB,IAA+BA,MAAM,CAACA,MAAP,CAAcK,EAAd,GAAmB,CAAtD,EAAyD;AACvDd,UAAAA,OAAO;AACR,SAFD,MAEO;AACLA,UAAAA,OAAO,CAACe,SAAD,CAAP;AACD;AACF;AACF,KAxBH;AAyBD,GA1BM,CAAP;AA2BD,CA5BD;;AA8BA,MAAMC,YAAY,GAAG,MAAM;AACzB,SAAO,IAAIjB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,IAAAA,WAAW,CACRQ,WADH,GAEGC,UAFH,CAEcC,UAFd,CAEyB,UAFzB,EAGGa,IAHH,CAGQ,EAHR,EAGY;AAAEC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,GAAG,EAAE;AAAP;AAAd,KAHZ,EAIGC,OAJH,CAIW,CAACV,GAAD,EAAMW,IAAN,KAAe;AACtB,UAAIX,GAAJ,EAAS;AACPC,QAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd,EAAqCF,GAArC;AACAT,QAAAA,MAAM,CAAC,2CAAD,CAAN;AACD,OAHD,MAGO;AACLD,QAAAA,OAAO,CAACqB,IAAD,CAAP;AACD;AACF,KAXH;AAYD,GAbM,CAAP;AAcD,CAfD;;AAiBAC,MAAM,CAACC,OAAP,GAAiB;AACf3B,EAAAA,WADe;AAEfoB,EAAAA;AAFe,CAAjB","sourcesContent":["const mongoClient = require(\"../configs/mongoClient\");\n// Reference: https://bezkoder.com/node-js-mongodb-auth-jwt/\nconst addLocation = (long, lat) => {\n  return new Promise((resolve, reject) => {\n    mongoClient\n      .getDatabase()\n      .connection.collection(\"location\")\n      .updateOne(\n        {\n          long,\n          lat,\n        },\n        { $set: { long, lat } },\n        { upsert: true }\n      )\n      .then((result, err) => {\n        if (err) {\n          console.error(\"error: addLocation\", err);\n          reject(\"Failed to add location to database\");\n        } else {\n          // The mongo success result is on the following data structure\n          // result.ops: this is an array\n          if (result.ops && result.result && result.result.ok > 0) {\n            resolve();\n          } else {\n            resolve(undefined);\n          }\n        }\n      });\n  });\n};\n\nconst getLocations = () => {\n  return new Promise((resolve, reject) => {\n    mongoClient\n      .getDatabase()\n      .connection.collection(\"location\")\n      .find({}, { projection: { _id: 0 } })\n      .toArray((err, docs) => {\n        if (err) {\n          console.error(\"error: getLocations\", err);\n          reject(\"Failed to get all locations from database\");\n        } else {\n          resolve(docs);\n        }\n      });\n  });\n};\n\nmodule.exports = {\n  addLocation,\n  getLocations,\n};\n"]},"metadata":{},"sourceType":"script"}