{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/coviforum/src/pages/mainboard/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./mainboard.css\";\nimport { getAllBoards, searchAllBoards } from \"./board\";\nimport BoardList from \"../../components/board-msgs\";\nimport Loader from \"react-loader-spinner\";\nimport PageHead from \"../../components/header-view\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../../components/search\";\nimport ReactPaginate from \"react-paginate\"; //SOURCE FOR HELP: https://medium.com/developer-circle-kampala/how-to-create-a-simple-search-app-in-react-df3cf55927f5\n//Mainboard sets up the main board of the application\n\nconst Mainboard = props => {\n  const [boards, setBoards] = useState([]);\n  const [searchBoards, setSearchBoards] = useState([]);\n  const [visibleBoards, setVisibleBoards] = useState([]);\n  const [dataAvailable, setDataAvailable] = useState(false);\n  const [searchDone, setSearchDone] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const PER_PAGE = 15;\n  const offset = currentPage * PER_PAGE;\n\n  const triggerSearch = () => {\n    if (searchTerm !== \"\") {\n      onSearch(searchTerm);\n    } else {\n      setSearchBoards(boards);\n    }\n  };\n\n  useEffect(() => {\n    if (searchBoards.length > 0) {\n      // search list\n      const currentPageData = searchBoards.slice(offset, offset + PER_PAGE);\n      setVisibleBoards(currentPageData);\n    } else {\n      const currentPageData = boards.slice(offset, offset + PER_PAGE);\n      setVisibleBoards(currentPageData);\n    }\n  }, [boards, searchBoards, offset]);\n\n  function handlePageClick({\n    selected: selectedPage\n  }) {\n    setCurrentPage(selectedPage);\n  } // Set Pagination\n\n\n  useEffect(() => {\n    getAllBoards().then(response => {\n      setBoards(response.data);\n      setDataAvailable(true);\n    }).catch(err => {\n      console.error(\"ERROR: Cannot display board messages. Please refresh this webpage.\", err);\n    });\n  }, []); // Search\n  // Display users\n\n  const onSearch = term => {\n    setDataAvailable(false);\n    searchAllBoards(term).then(response => {\n      setSearchBoards(response.data);\n      setDataAvailable(true);\n      setSearchDone(true);\n    }).catch(error_loading => {\n      console.error(\"ERROR: Cannot display board messages. Please refresh this webpage.\", error_loading);\n    });\n  }; // Reset search terms\n\n\n  const resetSearch = () => {\n    setSearchTerm(\"\");\n    setSearchBoards([]);\n    setSearchDone(false);\n  };\n\n  return (\n    /*#__PURE__*/\n    // Setup main board page\n    React.createElement(\"div\", {\n      className: \"Mainboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(PageHead, {\n      className: \"title\",\n      title: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }), \"// Container for main page\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, dataAvailable ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"← Previous\",\n      nextLabel: \"Next →\",\n      pageCount: Math.ceil((searchBoards.length > 0 ? searchBoards.length : boards.length) / PER_PAGE),\n      onPageChange: handlePageClick,\n      containerClassName: \"pagination\",\n      previousLinkClassName: \"pagination__link\",\n      nextLinkClassName: \"pagination__link\",\n      disabledClassName: \"pagination__link--disabled\",\n      activeClassName: \"pagination__link--active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(BoardList, {\n      boards: visibleBoards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"← Previous\",\n      nextLabel: \"Next →\",\n      pageCount: Math.ceil((searchBoards.length > 0 ? searchBoards.length : boards.length) / PER_PAGE),\n      onPageChange: handlePageClick,\n      containerClassName: \"pagination\",\n      previousLinkClassName: \"pagination__link\",\n      nextLinkClassName: \"pagination__link\",\n      disabledClassName: \"pagination__link--disabled\",\n      activeClassName: \"pagination__link--active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(Loader, {\n      type: \"Puff\",\n      color: \"#4f5d75\",\n      height: 100,\n      width: 100,\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"aside\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/board/new_board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-new-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, \"Create New Message Board\")), /*#__PURE__*/React.createElement(SearchBar, {\n      value: searchTerm,\n      search: triggerSearch,\n      onSearch: setSearchTerm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }), searchDone ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: resetSearch,\n      className: \"search-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, searchBoards.length > 0 ? \"Reset\" : \"No boards to display.\") : \"\"))\n  );\n};\n\nexport default Mainboard;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/coviforum/src/pages/mainboard/index.js"],"names":["React","useEffect","useState","getAllBoards","searchAllBoards","BoardList","Loader","PageHead","Link","SearchBar","ReactPaginate","Mainboard","props","boards","setBoards","searchBoards","setSearchBoards","visibleBoards","setVisibleBoards","dataAvailable","setDataAvailable","searchDone","setSearchDone","searchTerm","setSearchTerm","currentPage","setCurrentPage","PER_PAGE","offset","triggerSearch","onSearch","length","currentPageData","slice","handlePageClick","selected","selectedPage","then","response","data","catch","err","console","error","term","error_loading","resetSearch","Math","ceil"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./mainboard.css\";\nimport { getAllBoards, searchAllBoards } from \"./board\";\nimport BoardList from \"../../components/board-msgs\";\nimport Loader from \"react-loader-spinner\";\nimport PageHead from \"../../components/header-view\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../../components/search\";\nimport ReactPaginate from \"react-paginate\";\n//SOURCE FOR HELP: https://medium.com/developer-circle-kampala/how-to-create-a-simple-search-app-in-react-df3cf55927f5\n\n//Mainboard sets up the main board of the application\nconst Mainboard = (props) => {\n  const [boards, setBoards] = useState([]);\n  const [searchBoards, setSearchBoards] = useState([]);\n  const [visibleBoards, setVisibleBoards] = useState([]);\n  const [dataAvailable, setDataAvailable] = useState(false);\n  const [searchDone, setSearchDone] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const PER_PAGE = 15;\n  const offset = currentPage * PER_PAGE;\n  const triggerSearch = () => {\n    if (searchTerm !== \"\") {\n      onSearch(searchTerm);\n    } else {\n      setSearchBoards(boards);\n    }\n  };\n  useEffect(() => {\n    if (searchBoards.length > 0) {\n      // search list\n      const currentPageData = searchBoards.slice(offset, offset + PER_PAGE);\n      setVisibleBoards(currentPageData);\n    } else {\n      const currentPageData = boards.slice(offset, offset + PER_PAGE);\n      setVisibleBoards(currentPageData);\n    }\n  }, [boards, searchBoards, offset]);\n\n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n// Set Pagination\n  useEffect(() => {\n    getAllBoards()\n      .then((response) => {\n        setBoards(response.data);\n        setDataAvailable(true);\n      })\n      .catch((err) => {\n        console.error(\"ERROR: Cannot display board messages. Please refresh this webpage.\", err);\n      });\n  }, []);\n// Search\n// Display users\n  const onSearch = (term) => {\n    setDataAvailable(false);\n    searchAllBoards(term)\n      .then((response) => {\n        setSearchBoards(response.data);\n        setDataAvailable(true);\n        setSearchDone(true);\n      })\n      .catch((error_loading) => {\n        console.error(\"ERROR: Cannot display board messages. Please refresh this webpage.\", error_loading);\n      });\n  };\n// Reset search terms\n  const resetSearch = () => {\n    setSearchTerm(\"\");\n    setSearchBoards([]);\n    setSearchDone(false);\n  };\n  return (\n  // Setup main board page\n    <div className=\"Mainboard\">\n      <PageHead className=\"title\" title=\"Home\" />\n// Container for main page\n      <div className=\"container\">\n        {\n          dataAvailable ? (\n            <React.Fragment>\n              <ReactPaginate\n                previousLabel={\"← Previous\"}\n                nextLabel={\"Next →\"}\n                pageCount={Math.ceil(\n                  (searchBoards.length > 0\n                    ? searchBoards.length\n                    : boards.length) / PER_PAGE\n                )}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                previousLinkClassName={\"pagination__link\"}\n                nextLinkClassName={\"pagination__link\"}\n                disabledClassName={\"pagination__link--disabled\"}\n                activeClassName={\"pagination__link--active\"}\n              />\n              <BoardList boards={visibleBoards} />\n              <ReactPaginate\n                previousLabel={\"← Previous\"}\n                nextLabel={\"Next →\"}\n                pageCount={Math.ceil(\n                  (searchBoards.length > 0\n                    ? searchBoards.length\n                    : boards.length) / PER_PAGE\n                )}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                previousLinkClassName={\"pagination__link\"}\n                nextLinkClassName={\"pagination__link\"}\n                disabledClassName={\"pagination__link--disabled\"}\n                activeClassName={\"pagination__link--active\"}\n              />\n            </React.Fragment>\n          ) : (\n            <Loader\n              type=\"Puff\"\n              color=\"#4f5d75\"\n              height={100}\n              width={100}\n              className=\"loader\"\n            />\n          )\n        }\n      </div>\n      <div className=\"aside\">\n        <Link to=\"/board/new_board\">\n          <div className=\"create-new-board\">Create New Message Board</div>\n        </Link>\n        <SearchBar\n          value={searchTerm}\n          search={triggerSearch}\n          onSearch={setSearchTerm}\n        />\n        {searchDone ? (\n          <button onClick={resetSearch} className=\"search-info\">\n            {searchBoards.length > 0 ? \"Reset\" : \"No boards to display.\"}\n          </button>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\nexport default Mainboard;\n"]},"metadata":{},"sourceType":"module"}