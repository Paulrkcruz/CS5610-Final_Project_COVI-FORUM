{"ast":null,"code":"const MongoClient = require(\"mongodb\").MongoClient;\n\nconst configs = require(\"./config\"); // Setup Mongo db\n\n\nlet database;\n\nconst mongoDb = (uri, dbName) => {\n  const currentMongo = {};\n  const options = {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  };\n  currentMongo.client = new MongoClient(uri, options);\n  return new Promise(resolve => {\n    currentMongo.client.connect(err => {\n      if (err) throw err;\n      currentMongo.connection = currentMongo.client.db(dbName);\n      console.log(\"> Mongo db connected.\");\n      resolve(currentMongo);\n    });\n  });\n}; // Connect to mongo db\n\n\nconst initConnection = () => {\n  return new Promise(resolve => {\n    const uri = config.mongo.uri;\n    mongoDb(uri, \"coviforum-messageboard\").then(db => {\n      database = db;\n      resolve();\n    });\n  });\n};\n\nconst getDatabase = () => {\n  return database;\n};\n\nmodule.exports = {\n  initConnection,\n  getDatabase\n};","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/coviforum/server/configs/mongoClient.js"],"names":["MongoClient","require","configs","database","mongoDb","uri","dbName","currentMongo","options","useNewUrlParser","useUnifiedTopology","client","Promise","resolve","connect","err","connection","db","console","log","initConnection","config","mongo","then","getDatabase","module","exports"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,WAAvC;;AACA,MAAME,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB,C,CACA;;;AACA,IAAIE,QAAJ;;AACA,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC/B,QAAMC,YAAY,GAAG,EAArB;AACA,QAAMC,OAAO,GAAG;AACdC,IAAAA,eAAe,EAAE,IADH;AAEdC,IAAAA,kBAAkB,EAAE;AAFN,GAAhB;AAIAH,EAAAA,YAAY,CAACI,MAAb,GAAsB,IAAIX,WAAJ,CAAgBK,GAAhB,EAAqBG,OAArB,CAAtB;AACA,SAAO,IAAII,OAAJ,CAAaC,OAAD,IAAa;AAC9BN,IAAAA,YAAY,CAACI,MAAb,CAAoBG,OAApB,CAA6BC,GAAD,IAAS;AACnC,UAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTR,MAAAA,YAAY,CAACS,UAAb,GAA0BT,YAAY,CAACI,MAAb,CAAoBM,EAApB,CAAuBX,MAAvB,CAA1B;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAN,MAAAA,OAAO,CAACN,YAAD,CAAP;AACD,KALD;AAMD,GAPM,CAAP;AAQD,CAfD,C,CAgBA;;;AACA,MAAMa,cAAc,GAAG,MAAM;AAC3B,SAAO,IAAIR,OAAJ,CAAaC,OAAD,IAAa;AAC9B,UAAMR,GAAG,GAAGgB,MAAM,CAACC,KAAP,CAAajB,GAAzB;AACAD,IAAAA,OAAO,CAACC,GAAD,EAAM,wBAAN,CAAP,CAAuCkB,IAAvC,CAA6CN,EAAD,IAAQ;AAClDd,MAAAA,QAAQ,GAAGc,EAAX;AACAJ,MAAAA,OAAO;AACR,KAHD;AAID,GANM,CAAP;AAOD,CARD;;AASA,MAAMW,WAAW,GAAG,MAAM;AACxB,SAAOrB,QAAP;AACD,CAFD;;AAGAsB,MAAM,CAACC,OAAP,GAAiB;AAAEN,EAAAA,cAAF;AAAkBI,EAAAA;AAAlB,CAAjB","sourcesContent":["const MongoClient = require(\"mongodb\").MongoClient;\nconst configs = require(\"./config\");\n// Setup Mongo db\nlet database;\nconst mongoDb = (uri, dbName) => {\n  const currentMongo = {};\n  const options = {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  };\n  currentMongo.client = new MongoClient(uri, options);\n  return new Promise((resolve) => {\n    currentMongo.client.connect((err) => {\n      if (err) throw err;\n      currentMongo.connection = currentMongo.client.db(dbName);\n      console.log(\"> Mongo db connected.\");\n      resolve(currentMongo);\n    });\n  });\n};\n// Connect to mongo db\nconst initConnection = () => {\n  return new Promise((resolve) => {\n    const uri = config.mongo.uri;\n    mongoDb(uri, \"coviforum-messageboard\").then((db) => {\n      database = db;\n      resolve();\n    });\n  });\n};\nconst getDatabase = () => {\n  return database;\n};\nmodule.exports = { initConnection, getDatabase };\n"]},"metadata":{},"sourceType":"script"}