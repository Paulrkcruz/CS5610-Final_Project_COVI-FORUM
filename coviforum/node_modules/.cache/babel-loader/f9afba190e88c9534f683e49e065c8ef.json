{"ast":null,"code":"'use strict';\n\nconst TEST_REGEX = /^\\$|\\./;\nconst REPLACE_REGEX = /^\\$|\\./g;\n\nfunction isPlainObject(obj) {\n  return typeof obj === 'object' && obj !== null;\n}\n\nfunction withEach(target, cb) {\n  (function act(obj) {\n    if (Array.isArray(obj)) {\n      obj.forEach(act);\n    } else if (isPlainObject(obj)) {\n      Object.keys(obj).forEach(function (key) {\n        const val = obj[key];\n        const resp = cb(obj, val, key);\n\n        if (resp.shouldRecurse) {\n          act(obj[resp.key || key]);\n        }\n      });\n    }\n  })(target);\n}\n\nfunction has(target) {\n  let hasProhibited = false;\n  withEach(target, function (obj, val, key) {\n    if (TEST_REGEX.test(key)) {\n      hasProhibited = true;\n      return {\n        shouldRecurse: false\n      };\n    } else {\n      return {\n        shouldRecurse: true\n      };\n    }\n  });\n  return hasProhibited;\n}\n\nfunction sanitize(target, options) {\n  options = options || {};\n  let replaceWith = null;\n\n  if (!TEST_REGEX.test(options.replaceWith)) {\n    replaceWith = options.replaceWith;\n  }\n\n  withEach(target, function (obj, val, key) {\n    let shouldRecurse = true;\n\n    if (TEST_REGEX.test(key)) {\n      delete obj[key];\n\n      if (replaceWith) {\n        key = key.replace(REPLACE_REGEX, replaceWith);\n        obj[key] = val;\n      } else {\n        shouldRecurse = false;\n      }\n    }\n\n    return {\n      shouldRecurse: shouldRecurse,\n      key: key\n    };\n  });\n  return target;\n}\n\nfunction middleware(options) {\n  return function (req, res, next) {\n    ['body', 'params', 'headers', 'query'].forEach(function (k) {\n      if (req[k]) {\n        req[k] = sanitize(req[k], options);\n      }\n    });\n    next();\n  };\n}\n\nmodule.exports = middleware;\nmodule.exports.sanitize = sanitize;\nmodule.exports.has = has;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/coviforum/node_modules/express-mongo-sanitize/index.js"],"names":["TEST_REGEX","REPLACE_REGEX","isPlainObject","obj","withEach","target","cb","act","Array","isArray","forEach","Object","keys","key","val","resp","shouldRecurse","has","hasProhibited","test","sanitize","options","replaceWith","replace","middleware","req","res","next","k","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst TEST_REGEX = /^\\$|\\./;\nconst REPLACE_REGEX = /^\\$|\\./g;\n\nfunction isPlainObject(obj) {\n  return typeof obj === 'object' && obj !== null;\n}\n\nfunction withEach(target, cb) {\n  (function act(obj) {\n    if(Array.isArray(obj)) {\n      obj.forEach(act);\n\n    } else if(isPlainObject(obj)) {\n      Object.keys(obj).forEach(function(key) {\n        const val = obj[key];\n        const resp = cb(obj, val, key);\n        if(resp.shouldRecurse) {\n          act(obj[resp.key || key]);\n        }\n      });\n    }\n  })(target);\n\n}\n\nfunction has(target) {\n  let hasProhibited = false;\n  withEach(target, function(obj, val, key) {\n    if(TEST_REGEX.test(key)) {\n      hasProhibited = true;\n      return { shouldRecurse: false };\n    } else {\n      return { shouldRecurse: true };\n    }\n  });\n\n  return hasProhibited;\n}\n\nfunction sanitize(target, options) {\n  options = options || {};\n\n  let replaceWith = null;\n  if(!(TEST_REGEX.test(options.replaceWith))) {\n    replaceWith = options.replaceWith;\n  }\n\n  withEach(target, function(obj, val, key) {\n    let shouldRecurse = true;\n\n    if(TEST_REGEX.test(key)) {\n      delete obj[key];\n      if(replaceWith) {\n        key = key.replace(REPLACE_REGEX, replaceWith);\n        obj[key] = val;\n      } else {\n        shouldRecurse = false;\n      }\n    }\n\n    return {\n      shouldRecurse: shouldRecurse,\n      key: key\n    };\n  });\n\n  return target;\n}\n\nfunction middleware(options) {\n  return function(req, res, next) {\n    ['body', 'params', 'headers', 'query'].forEach(function(k) {\n      if(req[k]) {\n        req[k] = sanitize(req[k], options);\n      }\n    });\n    next();\n  };\n}\n\nmodule.exports = middleware;\nmodule.exports.sanitize = sanitize;\nmodule.exports.has = has;\n"]},"metadata":{},"sourceType":"script"}