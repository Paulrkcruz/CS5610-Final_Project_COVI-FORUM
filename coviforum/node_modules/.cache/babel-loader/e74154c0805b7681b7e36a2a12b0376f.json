{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/coviforum/src/pages/mainboard/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./mainboard.css\";\nimport { getAllBoards, searchAllBoards } from \"../../board\";\nimport BoardList from \"../../components/board-msgs\";\nimport Loader from \"react-loader-spinner\";\nimport PageHead from \"../../components/header-view\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../../components/search\";\nimport ReactPaginate from \"react-paginate\"; //SOURCE FOR HELP: https://medium.com/developer-circle-kampala/how-to-create-a-simple-search-app-in-react-df3cf55927f5\n//Mainboard sets up the main board of the application\n\nconst Mainboard = props => {\n  const [boards, setBoards] = useState([]);\n  const [searchBoards, setSearchBoards] = useState([]);\n  const [visibleBoards, setVisibleBoards] = useState([]);\n  const [dataAvailable, setDataAvailable] = useState(false);\n  const [searchDone, setSearchDone] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const PER_PAGE = 10;\n  const offset = currentPage * PER_PAGE;\n\n  const triggerSearch = () => {\n    if (searchTerm !== \"\") {\n      onSearch(searchTerm);\n    } else {\n      setSearchBoards(boards);\n    }\n  }; // Search setup\n  // Route to boards\n\n\n  useEffect(() => {\n    if (searchBoards.length > 0) {\n      const currentPageData = searchBoards.slice(offset, offset + PER_PAGE);\n      setVisibleBoards(currentPageData);\n    } else {\n      const currentPageData = boards.slice(offset, offset + PER_PAGE);\n      setVisibleBoards(currentPageData);\n    }\n  }, [boards, searchBoards, offset]); // Handle clicks\n  // Use source guide\n\n  function handlePageClick({\n    selected: selectedPage\n  }) {\n    setCurrentPage(selectedPage);\n  }\n\n  useEffect(() => {\n    getAllBoards().then(response => {\n      // Place Users here\n      setBoards(response.data);\n      setDataAvailable(true);\n    }).catch(err => {\n      console.error(\"ERROR: Boards not available.\", err);\n    });\n  }, []);\n\n  const onSearch = term => {\n    setDataAvailable(false);\n    searchAllBoards(term).then(response => {\n      setSearchBoards(response.data); // Pagination\n      // Users here\n\n      setDataAvailable(true);\n      setSearchDone(true);\n    }).catch(err => {\n      console.error(\"ERROR: Boards not available.\", err);\n    });\n  };\n\n  const resetSearch = () => {\n    setSearchTerm(\"\");\n    setSearchBoards([]);\n    setSearchDone(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHead, {\n    className: \"title\",\n    title: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, dataAvailable ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactPaginate, {\n    previousLabel: \"← Previous\",\n    nextLabel: \"Next →\",\n    pageCount: Math.ceil((searchBoards.length > 0 ? searchBoards.length : boards.length) / PER_PAGE),\n    onPageChange: handlePageClick,\n    containerClassName: \"pagination\",\n    previousLinkClassName: \"pagination__link\",\n    nextLinkClassName: \"pagination__link\",\n    disabledClassName: \"pagination__link--disabled\",\n    activeClassName: \"pagination__link--active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BoardList, {\n    boards: visibleBoards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ReactPaginate, {\n    previousLabel: \"← Previous\",\n    nextLabel: \"Next →\",\n    pageCount: Math.ceil((searchBoards.length > 0 ? searchBoards.length : boards.length) / PER_PAGE),\n    onPageChange: handlePageClick,\n    containerClassName: \"pagination\",\n    previousLinkClassName: \"pagination__link\",\n    nextLinkClassName: \"pagination__link\",\n    disabledClassName: \"pagination__link--disabled\",\n    activeClassName: \"pagination__link--active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(Loader, {\n    type: \"Puff\",\n    color: \"#4f5d75\",\n    height: 100,\n    width: 100,\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"aside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/board/new_board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-new-board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"Create New Board\")), /*#__PURE__*/React.createElement(SearchBar, {\n    value: searchTerm,\n    search: triggerSearch,\n    onSearch: setSearchTerm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), searchDone ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetSearch,\n    className: \"search-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, searchBoards.length > 0 ? \"Reset\" : \"No boards match your search.\") : \"\"));\n};\n\nexport default Mainboard;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/coviforum/src/pages/mainboard/index.js"],"names":["React","useEffect","useState","getAllBoards","searchAllBoards","BoardList","Loader","PageHead","Link","SearchBar","ReactPaginate","Mainboard","props","boards","setBoards","searchBoards","setSearchBoards","visibleBoards","setVisibleBoards","dataAvailable","setDataAvailable","searchDone","setSearchDone","searchTerm","setSearchTerm","currentPage","setCurrentPage","PER_PAGE","offset","triggerSearch","onSearch","length","currentPageData","slice","handlePageClick","selected","selectedPage","then","response","data","catch","err","console","error","term","resetSearch","Math","ceil"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./mainboard.css\";\nimport { getAllBoards, searchAllBoards } from \"../../board\";\nimport BoardList from \"../../components/board-msgs\";\nimport Loader from \"react-loader-spinner\";\nimport PageHead from \"../../components/header-view\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../../components/search\";\nimport ReactPaginate from \"react-paginate\";\n//SOURCE FOR HELP: https://medium.com/developer-circle-kampala/how-to-create-a-simple-search-app-in-react-df3cf55927f5\n\n//Mainboard sets up the main board of the application\nconst Mainboard = (props) => {\n  const [boards, setBoards] = useState([]);\n  const [searchBoards, setSearchBoards] = useState([]);\n  const [visibleBoards, setVisibleBoards] = useState([]);\n\n  const [dataAvailable, setDataAvailable] = useState(false);\n  const [searchDone, setSearchDone] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const PER_PAGE = 10;\n  const offset = currentPage * PER_PAGE;\n\n  const triggerSearch = () => {\n    if (searchTerm !== \"\") {\n      onSearch(searchTerm);\n    } else {\n      setSearchBoards(boards);\n    }\n  };\n// Search setup\n// Route to boards\n  useEffect(() => {\n    if (searchBoards.length > 0) {\n      const currentPageData = searchBoards.slice(offset, offset + PER_PAGE);\n      setVisibleBoards(currentPageData);\n    } else {\n      const currentPageData = boards.slice(offset, offset + PER_PAGE);\n      setVisibleBoards(currentPageData);\n    }\n  }, [boards, searchBoards, offset]);\n// Handle clicks\n// Use source guide\n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n\n  useEffect(() => {\n    getAllBoards()\n      .then((response) => {\n        // Place Users here\n        setBoards(response.data);\n        setDataAvailable(true);\n      })\n      .catch((err) => {\n        console.error(\"ERROR: Boards not available.\", err);\n      });\n  }, []);\n\n  const onSearch = (term) => {\n    setDataAvailable(false);\n    searchAllBoards(term)\n      .then((response) => {\n        setSearchBoards(response.data);\n        // Pagination\n        // Users here\n        setDataAvailable(true);\n        setSearchDone(true);\n      })\n      .catch((err) => {\n        console.error(\"ERROR: Boards not available.\", err);\n      });\n  };\n\n  const resetSearch = () => {\n    setSearchTerm(\"\");\n    setSearchBoards([]);\n    setSearchDone(false);\n  };\n\n  return (\n    <div className=\"mainboard\">\n      <PageHead className=\"title\" title=\"Home\" />\n\n      <div className=\"container\">\n        {\n          \n          dataAvailable ? (\n            <React.Fragment>\n              <ReactPaginate\n                previousLabel={\"← Previous\"}\n                nextLabel={\"Next →\"}\n                pageCount={Math.ceil(\n                  (searchBoards.length > 0\n                    ? searchBoards.length\n                    : boards.length) / PER_PAGE\n                )}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                previousLinkClassName={\"pagination__link\"}\n                nextLinkClassName={\"pagination__link\"}\n                disabledClassName={\"pagination__link--disabled\"}\n                activeClassName={\"pagination__link--active\"}\n              />\n              <BoardList boards={visibleBoards} />\n              <ReactPaginate\n                previousLabel={\"← Previous\"}\n                nextLabel={\"Next →\"}\n                pageCount={Math.ceil(\n                  (searchBoards.length > 0\n                    ? searchBoards.length\n                    : boards.length) / PER_PAGE\n                )}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                previousLinkClassName={\"pagination__link\"}\n                nextLinkClassName={\"pagination__link\"}\n                disabledClassName={\"pagination__link--disabled\"}\n                activeClassName={\"pagination__link--active\"}\n              />\n            </React.Fragment>\n          ) : (\n            <Loader\n              type=\"Puff\"\n              color=\"#4f5d75\"\n              height={100}\n              width={100}\n              className=\"loader\"\n            />\n          )\n        }\n      </div>\n\n      <div className=\"aside\">\n        <Link to=\"/board/new_board\">\n          <div className=\"create-new-board\">Create New Board</div>\n        </Link>\n        <SearchBar\n          value={searchTerm}\n          search={triggerSearch}\n          onSearch={setSearchTerm}\n        />\n        {searchDone ? (\n          <button onClick={resetSearch} className=\"search-info\">\n            {searchBoards.length > 0 ? \"Reset\" : \"No boards match your search.\"}\n          </button>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Mainboard;"]},"metadata":{},"sourceType":"module"}