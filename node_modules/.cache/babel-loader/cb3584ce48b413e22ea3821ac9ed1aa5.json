{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/BoardsList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport BoardsDataService from \"../services/BoardsService\";\n\nconst Boards = props => {\n  const initialBoardsState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [currentBoards, setCurrentBoards] = useState(initialBoardsState);\n  const [message, setMessage] = useState(\"\");\n\n  const getBoards = id => {\n    BoardsDataService.get(id).then(response => {\n      setCurrentBoards(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getBoards(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCurrentBoards({ ...currentBoards,\n      [name]: value\n    });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      id: currentBoards.id,\n      title: currentBoards.title,\n      description: currentBoards.description,\n      published: status\n    };\n    BoardsDataService.update(currentBoards.id, data).then(response => {\n      setCurrentBoards({ ...currentBoards,\n        published: status\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const updateBoards = () => {\n    BoardsDataService.update(currentBoards.id, currentBoards).then(response => {\n      console.log(response.data);\n      setMessage(\"The boards was updated successfully!\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const deleteBoards = () => {\n    BoardsDataService.remove(currentBoards.id).then(response => {\n      console.log(response.data);\n      props.history.push(\"/boards\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, currentBoards ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Boards\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"title\",\n    name: \"title\",\n    value: currentBoards.title,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"description\",\n    name: \"description\",\n    value: currentBoards.description,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, \"Status:\")), currentBoards.published ? \"Published\" : \"Pending\")), currentBoards.published ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"badge badge-primary mr-2\",\n    onClick: () => updatePublished(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, \"UnPublish\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"badge badge-primary mr-2\",\n    onClick: () => updatePublished(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"Publish\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"badge badge-danger mr-2\",\n    onClick: deleteBoards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"badge badge-success\",\n    onClick: updateBoards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, message)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"Please click on a Boards...\")));\n};\n\nexport default Boards;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/BoardsList.js"],"names":["React","useState","useEffect","BoardsDataService","Boards","props","initialBoardsState","id","title","description","published","currentBoards","setCurrentBoards","message","setMessage","getBoards","get","then","response","data","console","log","catch","e","match","params","handleInputChange","event","name","value","target","updatePublished","status","update","updateBoards","deleteBoards","remove","history","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BoardsDataService from \"../services/BoardsService\";\n\nconst Boards = props => {\n    const initialBoardsState = {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false\n    };\n    const [currentBoards, setCurrentBoards] = useState(initialBoardsState);\n    const [message, setMessage] = useState(\"\");\n\n    const getBoards = id => {\n        BoardsDataService.get(id)\n            .then(response => {\n                setCurrentBoards(response.data);\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    useEffect(() => {\n        getBoards(props.match.params.id);\n    }, [props.match.params.id]);\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setCurrentBoards({ ...currentBoards, [name]: value });\n    };\n\n    const updatePublished = status => {\n        var data = {\n            id: currentBoards.id,\n            title: currentBoards.title,\n            description: currentBoards.description,\n            published: status\n        };\n\n        BoardsDataService.update(currentBoards.id, data)\n            .then(response => {\n                setCurrentBoards({ ...currentBoards, published: status });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const updateBoards = () => {\n        BoardsDataService.update(currentBoards.id, currentBoards)\n            .then(response => {\n                console.log(response.data);\n                setMessage(\"The boards was updated successfully!\");\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const deleteBoards = () => {\n        BoardsDataService.remove(currentBoards.id)\n            .then(response => {\n                console.log(response.data);\n                props.history.push(\"/boards\");\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    return (\n        <div>\n            {currentBoards ? (\n                <div className=\"edit-form\">\n                    <h4>Boards</h4>\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\">Title</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"title\"\n                                name=\"title\"\n                                value={currentBoards.title}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Description</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                name=\"description\"\n                                value={currentBoards.description}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>\n                                <strong>Status:</strong>\n                            </label>\n                            {currentBoards.published ? \"Published\" : \"Pending\"}\n                        </div>\n                    </form>\n\n                    {currentBoards.published ? (\n                        <button\n                            className=\"badge badge-primary mr-2\"\n                            onClick={() => updatePublished(false)}\n                        >\n                            UnPublish\n                        </button>\n                    ) : (\n                        <button\n                            className=\"badge badge-primary mr-2\"\n                            onClick={() => updatePublished(true)}\n                        >\n                            Publish\n                        </button>\n                    )}\n\n                    <button className=\"badge badge-danger mr-2\" onClick={deleteBoards}>\n                        Delete\n                    </button>\n\n                    <button\n                        type=\"submit\"\n                        className=\"badge badge-success\"\n                        onClick={updateBoards}\n                    >\n                        Update\n                    </button>\n                    <p>{message}</p>\n                </div>\n            ) : (\n                <div>\n                    <br />\n                    <p>Please click on a Boards...</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Boards;"]},"metadata":{},"sourceType":"module"}