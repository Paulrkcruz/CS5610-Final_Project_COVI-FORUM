{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/covid-stats/DateSlider.js\";\nimport React from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nconst date_of_first_case = new Date(\"01/22/2020\");\n\nfunction formatDate(date) {\n  const d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear().toString().substr(-2);\n  return [month, day, year].join('/');\n}\n\nexport default class DateSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  static getDictKeys(dict, defaultVal) {\n    try {\n      return dict.keys();\n    } catch (e) {\n      return defaultVal;\n    }\n  }\n\n  handleChange(event, newValue) {\n    const result = new Date(\"04/10/2021\");\n    result.setDate(result.getDate() + newValue);\n    this.props.handleDateChange(formatDate(result));\n  }\n\n  render() {\n    const date_today = new Date(); // To calculate the time difference of two dates\n\n    const difference_in_time = date_today.getTime() - date_of_first_case.getTime(); // To calculate the no. of days between two dates (subtract 1 since data is only updated at 23:59 UTC)\n\n    const difference_in_days = Math.floor(difference_in_time / (1000 * 3600 * 24)) - 1;\n    const marks = [{\n      value: 0,\n      label: \"Day 0\"\n    }, {\n      value: difference_in_days,\n      label: \"Yesterday\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n      id: \"continuous-slider\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Days since April 10, 2021:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Slider, {\n      defaultValue: 0,\n      onChange: this.handleChange,\n      getAriaValueText: \"\",\n      \"aria-labelledby\": \"continuous-slider\",\n      valueLabelDisplay: \"on\",\n      marks: marks,\n      max: difference_in_days,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/covid-stats/DateSlider.js"],"names":["React","withStyles","Typography","Slider","date_of_first_case","Date","formatDate","date","d","month","getMonth","day","getDate","year","getFullYear","toString","substr","join","DateSlider","Component","constructor","props","handleChange","bind","getDictKeys","dict","defaultVal","keys","e","event","newValue","result","setDate","handleDateChange","render","date_today","difference_in_time","getTime","difference_in_days","Math","floor","marks","value","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,kBAAkB,GAAG,IAAIC,IAAJ,CAAS,YAAT,CAA3B;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,QAAMC,CAAC,GAAG,IAAIH,IAAJ,CAASE,IAAT,CAAV;AAAA,QACIE,KAAK,GAAG,MAAMD,CAAC,CAACE,QAAF,KAAe,CAArB,CADZ;AAAA,QAEIC,GAAG,GAAG,KAAKH,CAAC,CAACI,OAAF,EAFf;AAAA,QAGIC,IAAI,GAAGL,CAAC,CAACM,WAAF,GAAgBC,QAAhB,GAA2BC,MAA3B,CAAkC,CAAC,CAAnC,CAHX;AAKA,SAAO,CAACP,KAAD,EAAQE,GAAR,EAAaE,IAAb,EAAmBI,IAAnB,CAAwB,GAAxB,CAAP;AACD;;AAED,eAAe,MAAMC,UAAN,SAAyBlB,KAAK,CAACmB,SAA/B,CAAyC;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAGiB,SAAXC,WAAW,CAACC,IAAD,EAAOC,UAAP,EAAmB;AACnC,QAAI;AACF,aAAQD,IAAI,CAACE,IAAL,EAAR;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV,aAAOF,UAAP;AACD;AACF;;AAEDJ,EAAAA,YAAY,CAACO,KAAD,EAAQC,QAAR,EAAkB;AAC5B,UAAMC,MAAM,GAAG,IAAI1B,IAAJ,CAAS,YAAT,CAAf;AACA0B,IAAAA,MAAM,CAACC,OAAP,CAAeD,MAAM,CAACnB,OAAP,KAAmBkB,QAAlC;AACA,SAAKT,KAAL,CAAWY,gBAAX,CAA4B3B,UAAU,CAACyB,MAAD,CAAtC;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAEP,UAAMC,UAAU,GAAG,IAAI9B,IAAJ,EAAnB,CAFO,CAIP;;AACA,UAAM+B,kBAAkB,GAAGD,UAAU,CAACE,OAAX,KAAuBjC,kBAAkB,CAACiC,OAAnB,EAAlD,CALO,CAOP;;AACA,UAAMC,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CAAWJ,kBAAkB,IAAI,OAAO,IAAP,GAAc,EAAlB,CAA7B,IAAsD,CAAjF;AAEA,UAAMK,KAAK,GAAG,CACZ;AACEC,MAAAA,KAAK,EAAE,CADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADY,EAKZ;AACED,MAAAA,KAAK,EAAEJ,kBADT;AAEEK,MAAAA,KAAK,EAAE;AAFT,KALY,CAAd;AAUA,wBACE,uDACE,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAC,mBAAf;AAAmC,MAAA,YAAY,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,MAAD;AACE,MAAA,YAAY,EAAE,CADhB;AAEE,MAAA,QAAQ,EAAE,KAAKrB,YAFjB;AAGE,MAAA,gBAAgB,EAAE,EAHpB;AAIE,yBAAgB,mBAJlB;AAKE,MAAA,iBAAiB,EAAC,IALpB;AAME,MAAA,KAAK,EAAEmB,KANT;AAOE,MAAA,GAAG,EAAEH,kBAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAiBD;;AA3DqD","sourcesContent":["import React from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst date_of_first_case = new Date(\"01/22/2020\");\n\nfunction formatDate(date) {\n  const d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear().toString().substr(-2);\n\n  return [month, day, year].join('/');\n}\n\nexport default class DateSlider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  static getDictKeys(dict, defaultVal) {\n    try {\n      return (dict.keys());\n    } catch (e) {\n      return defaultVal;\n    }\n  }\n\n  handleChange(event, newValue) {\n    const result = new Date(\"04/10/2021\");\n    result.setDate(result.getDate() + newValue);\n    this.props.handleDateChange(formatDate(result));\n  }\n\n  render() {\n\n    const date_today = new Date();\n\n    // To calculate the time difference of two dates\n    const difference_in_time = date_today.getTime() - date_of_first_case.getTime();\n\n    // To calculate the no. of days between two dates (subtract 1 since data is only updated at 23:59 UTC)\n    const difference_in_days = Math.floor(difference_in_time / (1000 * 3600 * 24)) - 1;\n\n    const marks = [\n      {\n        value: 0,\n        label: \"Day 0\",\n      },\n      {\n        value: difference_in_days,\n        label: \"Yesterday\",\n      },\n    ];\n    return (\n      <>\n        <Typography id=\"continuous-slider\" gutterBottom>\n          Days since April 10, 2021:\n    </Typography>\n        <br />\n        <br />\n        <Slider\n          defaultValue={0}\n          onChange={this.handleChange}\n          getAriaValueText={\"\"}\n          aria-labelledby=\"continuous-slider\"\n          valueLabelDisplay=\"on\"\n          marks={marks}\n          max={difference_in_days}\n        />\n      </>)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}