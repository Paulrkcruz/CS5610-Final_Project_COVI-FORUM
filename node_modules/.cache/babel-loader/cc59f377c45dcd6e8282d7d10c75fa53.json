{"ast":null,"code":"import { deleteCookie, getCookie, setCookie } from \"./cookie.service\";\nimport axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', {\n      headers: authHeader()\n    });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', {\n      headers: authHeader()\n    });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', {\n      headers: authHeader()\n    });\n  }\n\n}\n\nconst COOKIE_NAME = \"coviforum-user\";\n/**\n    this.id \n    this.name\n    this.created\n    this.updated\n    this.email\n    this.active\n*/\n\nconst addUser = user => {\n  Object.assign(currentUser, user);\n  setCookie(COOKIE_NAME, JSON.stringify(currentUser), 1);\n};\n\nconst getUser = () => {\n  if (!initialLoad) {\n    let cookie = getCookie(COOKIE_NAME);\n\n    if (cookie) {\n      try {\n        cookie = JSON.parse(cookie);\n      } catch (error) {\n        console.log(\"Failed to load user cache. Please refresh your browser\");\n      }\n\n      addUser(cookie);\n    }\n\n    initialLoad = true;\n  }\n\n  return currentUser;\n};\n\nconst logOut = () => {\n  Object.assign(currentUser);\n  deleteCookie(COOKIE_NAME);\n  window.location.href = \"/\";\n};\n\nlet initialLoad = false;\nconst currentUser = {};\nexport { currentUser, addUser, getUser, logOut };\nexport default new UserService();","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/services/user.service.js"],"names":["deleteCookie","getCookie","setCookie","axios","authHeader","API_URL","UserService","getPublicContent","get","getUserBoard","headers","getModeratorBoard","getAdminBoard","COOKIE_NAME","addUser","user","Object","assign","currentUser","JSON","stringify","getUser","initialLoad","cookie","parse","error","console","log","logOut","window","location","href"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,SAAvB,EAAkCC,SAAlC,QAAmD,kBAAnD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,iCAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,gBAAgB,GAAG;AACjB,WAAOJ,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,KAApB,CAAP;AACD;;AAEDI,EAAAA,YAAY,GAAG;AACb,WAAON,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,MAApB,EAA4B;AAAEK,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA5B,CAAP;AACD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,WAAOR,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,KAApB,EAA2B;AAAEK,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA3B,CAAP;AACD;;AAEDQ,EAAAA,aAAa,GAAG;AACd,WAAOT,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,OAApB,EAA6B;AAAEK,MAAAA,OAAO,EAAEN,UAAU;AAArB,KAA7B,CAAP;AACD;;AAfe;;AAkBlB,MAAMS,WAAW,GAAG,gBAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAIC,IAAD,IAAU;AACxBC,EAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd,EAA2BH,IAA3B;AACAb,EAAAA,SAAS,CAACW,WAAD,EAAcM,IAAI,CAACC,SAAL,CAAeF,WAAf,CAAd,EAA2C,CAA3C,CAAT;AACD,CAHD;;AAKA,MAAMG,OAAO,GAAG,MAAM;AACpB,MAAI,CAACC,WAAL,EAAkB;AAChB,QAAIC,MAAM,GAAGtB,SAAS,CAACY,WAAD,CAAtB;;AACA,QAAIU,MAAJ,EAAY;AACV,UAAI;AACFA,QAAAA,MAAM,GAAGJ,IAAI,CAACK,KAAL,CAAWD,MAAX,CAAT;AACD,OAFD,CAEE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,wDAAZ;AACD;;AACDb,MAAAA,OAAO,CAACS,MAAD,CAAP;AACD;;AACDD,IAAAA,WAAW,GAAG,IAAd;AACD;;AACD,SAAOJ,WAAP;AACD,CAdD;;AAgBA,MAAMU,MAAM,GAAG,MAAM;AACnBZ,EAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd;AACAlB,EAAAA,YAAY,CAACa,WAAD,CAAZ;AACAgB,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,CAJD;;AAMA,IAAIT,WAAW,GAAG,KAAlB;AACA,MAAMJ,WAAW,GAAG,EAApB;AAEA,SAASA,WAAT,EAAsBJ,OAAtB,EAA+BO,OAA/B,EAAwCO,MAAxC;AACA,eAAe,IAAItB,WAAJ,EAAf","sourcesContent":["import { deleteCookie, getCookie, setCookie } from \"./cookie.service\";\n\nimport axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nconst COOKIE_NAME = \"coviforum-user\";\n/**\n    this.id \n    this.name\n    this.created\n    this.updated\n    this.email\n    this.active\n*/\n\nconst addUser = (user) => {\n  Object.assign(currentUser, user);\n  setCookie(COOKIE_NAME, JSON.stringify(currentUser), 1);\n};\n\nconst getUser = () => {\n  if (!initialLoad) {\n    let cookie = getCookie(COOKIE_NAME);\n    if (cookie) {\n      try {\n        cookie = JSON.parse(cookie);\n      } catch (error) {\n        console.log(\"Failed to load user cache. Please refresh your browser\");\n      }\n      addUser(cookie);\n    }\n    initialLoad = true;\n  }\n  return currentUser;\n};\n\nconst logOut = () => {\n  Object.assign(currentUser);\n  deleteCookie(COOKIE_NAME);\n  window.location.href = \"/\";\n};\n\nlet initialLoad = false;\nconst currentUser = {};\n\nexport { currentUser, addUser, getUser, logOut };\nexport default new UserService();"]},"metadata":{},"sourceType":"module"}