{"ast":null,"code":"import axios from 'axios';\nimport { deleteCookie, getCookie, setCookie } from \"./cookie.service\";\nimport authHeader from './auth-header';\nconst API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', {\n      headers: authHeader()\n    });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', {\n      headers: authHeader()\n    });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', {\n      headers: authHeader()\n    });\n  }\n\n}\n\nconst COOKIE_NAME = \"coviforum\"; // Should have the following properties\n\n/*\n    this.id\n    this.name\n    this.created\n    this.updated\n    this.email\n    this.active\n*/\n\nconst addUser = user => {\n  Object.assign(currentUser, user);\n  setCookie(COOKIE_NAME, JSON.stringify(currentUser), 1);\n};\n\nconst getUser = () => {\n  if (!initialLoad) {\n    let cookie = getCookie(COOKIE_NAME);\n\n    if (cookie) {\n      try {\n        cookie = JSON.parse(cookie);\n      } catch (error) {\n        console.log(\"Failed to load cached user\");\n      }\n\n      addUser(cookie);\n    }\n\n    initialLoad = true;\n  }\n\n  return currentUser;\n};\n\nconst logOut = () => {\n  Object.assign(currentUser);\n  deleteCookie(COOKIE_NAME);\n  window.location.href = \"/\";\n};\n\nlet initialLoad = false;\nconst currentUser = {};\nexport default new UserService();\nexport { currentUser, addUser, getUser, logOut };","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/services/user.service.js"],"names":["axios","deleteCookie","getCookie","setCookie","authHeader","API_URL","UserService","getPublicContent","get","getUserBoard","headers","getModeratorBoard","getAdminBoard","COOKIE_NAME","addUser","user","Object","assign","currentUser","JSON","stringify","getUser","initialLoad","cookie","parse","error","console","log","logOut","window","location","href"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,SAAlC,QAAmD,kBAAnD;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,iCAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAEhBC,EAAAA,gBAAgB,GAAG;AACjB,WAAOP,KAAK,CAACQ,GAAN,CAAUH,OAAO,GAAG,KAApB,CAAP;AACD;;AAEDI,EAAAA,YAAY,GAAG;AACb,WAAOT,KAAK,CAACQ,GAAN,CAAUH,OAAO,GAAG,MAApB,EAA4B;AAACK,MAAAA,OAAO,EAAEN,UAAU;AAApB,KAA5B,CAAP;AACD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,WAAOX,KAAK,CAACQ,GAAN,CAAUH,OAAO,GAAG,KAApB,EAA2B;AAACK,MAAAA,OAAO,EAAEN,UAAU;AAApB,KAA3B,CAAP;AACD;;AAEDQ,EAAAA,aAAa,GAAG;AACd,WAAOZ,KAAK,CAACQ,GAAN,CAAUH,OAAO,GAAG,OAApB,EAA6B;AAACK,MAAAA,OAAO,EAAEN,UAAU;AAApB,KAA7B,CAAP;AACD;;AAhBe;;AAoBlB,MACIS,WAAW,GAAG,WADlB,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,MAAMC,OAAO,GAAIC,IAAD,IAAU;AACxBC,EAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd,EAA2BH,IAA3B;AACAZ,EAAAA,SAAS,CAACU,WAAD,EAAcM,IAAI,CAACC,SAAL,CAAeF,WAAf,CAAd,EAA2C,CAA3C,CAAT;AACD,CAHD;;AAKA,MAAMG,OAAO,GAAG,MAAM;AACpB,MAAI,CAACC,WAAL,EAAkB;AAChB,QAAIC,MAAM,GAAGrB,SAAS,CAACW,WAAD,CAAtB;;AACA,QAAIU,MAAJ,EAAY;AACV,UAAI;AACFA,QAAAA,MAAM,GAAGJ,IAAI,CAACK,KAAL,CAAWD,MAAX,CAAT;AACD,OAFD,CAEE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;;AACDb,MAAAA,OAAO,CAACS,MAAD,CAAP;AACD;;AACDD,IAAAA,WAAW,GAAG,IAAd;AACD;;AACD,SAAOJ,WAAP;AACD,CAdD;;AAgBA,MAAMU,MAAM,GAAG,MAAM;AACnBZ,EAAAA,MAAM,CAACC,MAAP,CAAcC,WAAd;AACAjB,EAAAA,YAAY,CAACY,WAAD,CAAZ;AACAgB,EAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,CAJD;;AAMA,IAAIT,WAAW,GAAG,KAAlB;AACA,MAAMJ,WAAW,GAAG,EAApB;AAEF,eAAe,IAAIZ,WAAJ,EAAf;AACA,SAASY,WAAT,EAAsBJ,OAAtB,EAA+BO,OAA/B,EAAwCO,MAAxC","sourcesContent":["import axios from 'axios';\nimport { deleteCookie, getCookie, setCookie } from \"./cookie.service\";\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', {headers: authHeader()});\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', {headers: authHeader()});\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', {headers: authHeader()});\n  }\n\n\n}\nconst\n    COOKIE_NAME = \"coviforum\";\n// Should have the following properties\n/*\n    this.id\n    this.name\n    this.created\n    this.updated\n    this.email\n    this.active\n*/\n  const addUser = (user) => {\n    Object.assign(currentUser, user);\n    setCookie(COOKIE_NAME, JSON.stringify(currentUser), 1);\n  };\n\n  const getUser = () => {\n    if (!initialLoad) {\n      let cookie = getCookie(COOKIE_NAME);\n      if (cookie) {\n        try {\n          cookie = JSON.parse(cookie);\n        } catch (error) {\n          console.log(\"Failed to load cached user\");\n        }\n        addUser(cookie);\n      }\n      initialLoad = true;\n    }\n    return currentUser;\n  };\n\n  const logOut = () => {\n    Object.assign(currentUser);\n    deleteCookie(COOKIE_NAME);\n    window.location.href = \"/\";\n  };\n\n  let initialLoad = false;\n  const currentUser = {};\n\nexport default new UserService();\nexport { currentUser, addUser, getUser, logOut };"]},"metadata":{},"sourceType":"module"}