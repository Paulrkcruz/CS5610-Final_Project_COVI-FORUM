{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/AddBoards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport BoardsDataService from \"../services/BoardsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddBoards = () => {\n  _s();\n\n  const initialBoardsState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [boards, setBoards] = useState(initialBoardsState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setBoards({ ...boards,\n      [name]: value\n    });\n  };\n\n  const saveBoards = () => {\n    var data = {\n      title: boards.title,\n      description: boards.description\n    };\n    BoardsDataService.createBoards(data).then(response => {\n      setBoards({\n        id: response.data.id,\n        title: response.data.title,\n        description: response.data.description,\n        published: response.data.published\n      });\n      setSubmitted(true);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const newBoards = () => {\n    setBoards(initialBoardsState);\n    setSubmitted(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"submit-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"New Boards Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"You submitted successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: newBoards,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"title\",\n          required: true,\n          value: boards.title,\n          onChange: handleInputChange,\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"description\",\n          required: true,\n          value: boards.description,\n          onChange: handleInputChange,\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveBoards,\n        className: \"btn btn-success\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddBoards, \"hAlyhJ/2R4T2o1uXCLguSzXd0g4=\");\n\n_c = AddBoards;\nexport default AddBoards;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBoards\");","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/AddBoards.js"],"names":["React","useState","BoardsDataService","AddBoards","initialBoardsState","id","title","description","published","boards","setBoards","submitted","setSubmitted","handleInputChange","event","name","value","target","saveBoards","data","createBoards","then","response","console","log","catch","e","newBoards"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,kBAAkB,GAAG;AACzBC,IAAAA,EAAE,EAAE,IADqB;AAEzBC,IAAAA,KAAK,EAAE,EAFkB;AAGzBC,IAAAA,WAAW,EAAE,EAHY;AAIzBC,IAAAA,SAAS,EAAE;AAJc,GAA3B;AAMA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACG,kBAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMY,iBAAiB,GAAGC,KAAK,IAAI;AACjC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAP,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACM,IAAD,GAAQC;AAArB,KAAD,CAAT;AACD,GAHD;;AAKA,QAAME,UAAU,GAAG,MAAM;AACvB,QAAIC,IAAI,GAAG;AACTb,MAAAA,KAAK,EAAEG,MAAM,CAACH,KADL;AAETC,MAAAA,WAAW,EAAEE,MAAM,CAACF;AAFX,KAAX;AAKAL,IAAAA,iBAAiB,CAACkB,YAAlB,CAA+BD,IAA/B,EACGE,IADH,CACQC,QAAQ,IAAI;AAChBZ,MAAAA,SAAS,CAAC;AACRL,QAAAA,EAAE,EAAEiB,QAAQ,CAACH,IAAT,CAAcd,EADV;AAERC,QAAAA,KAAK,EAAEgB,QAAQ,CAACH,IAAT,CAAcb,KAFb;AAGRC,QAAAA,WAAW,EAAEe,QAAQ,CAACH,IAAT,CAAcZ,WAHnB;AAIRC,QAAAA,SAAS,EAAEc,QAAQ,CAACH,IAAT,CAAcX;AAJjB,OAAD,CAAT;AAMAI,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAArB;AACD,KAVH,EAWGM,KAXH,CAWSC,CAAC,IAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACD,KAbH;AAcD,GApBD;;AAsBA,QAAMC,SAAS,GAAG,MAAM;AACtBjB,IAAAA,SAAS,CAACN,kBAAD,CAAT;AACAQ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,SAAS,gBACR;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAEgB,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAQR;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,EAAE,EAAC,OAHL;AAIE,UAAA,QAAQ,MAJV;AAKE,UAAA,KAAK,EAAElB,MAAM,CAACH,KALhB;AAME,UAAA,QAAQ,EAAEO,iBANZ;AAOE,UAAA,IAAI,EAAC;AAPP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,EAAE,EAAC,aAHL;AAIE,UAAA,QAAQ,MAJV;AAKE,UAAA,KAAK,EAAEJ,MAAM,CAACF,WALhB;AAME,UAAA,QAAQ,EAAEM,iBANZ;AAOE,UAAA,IAAI,EAAC;AAPP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eA2BE;AAAQ,QAAA,OAAO,EAAEK,UAAjB;AAA6B,QAAA,SAAS,EAAC,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CAvFD;;GAAMf,S;;KAAAA,S;AAyFN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport BoardsDataService from \"../services/BoardsService\";\n\nconst AddBoards = () => {\n  const initialBoardsState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [boards, setBoards] = useState(initialBoardsState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setBoards({ ...boards, [name]: value });\n  };\n\n  const saveBoards = () => {\n    var data = {\n      title: boards.title,\n      description: boards.description\n    };\n\n    BoardsDataService.createBoards(data)\n      .then(response => {\n        setBoards({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          published: response.data.published\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newBoards = () => {\n    setBoards(initialBoardsState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      <h3>New Boards Post</h3>\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newBoards}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              required\n              value={boards.title}\n              onChange={handleInputChange}\n              name=\"title\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"description\"\n              required\n              value={boards.description}\n              onChange={handleInputChange}\n              name=\"description\"\n            />\n          </div>\n\n          <button onClick={saveBoards} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddBoards;"]},"metadata":{},"sourceType":"module"}