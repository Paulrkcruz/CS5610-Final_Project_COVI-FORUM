{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/BoardsList.js\";\nimport React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport BoardsDataService from \"../services/BoardsService\";\nimport { useTable } from \"react-table\";\n\nconst BoardsList = props => {\n  const [boards, setBoards] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const boardsRef = useRef();\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(0);\n  const [pageSize, setPageSize] = useState(3);\n  const pageSizes = [3, 6, 9];\n  boardsRef.current = boards;\n\n  const onChangeSearchTitle = e => {\n    const searchTitle = e.target.value;\n    setSearchTitle(searchTitle);\n  };\n\n  const getRequestParams = (searchTitle, page, pageSize) => {\n    let params = {};\n\n    if (searchTitle) {\n      params[\"title\"] = searchTitle;\n    }\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (pageSize) {\n      params[\"size\"] = pageSize;\n    }\n\n    return params;\n  };\n\n  const retrieveBoards = () => {\n    const params = getRequestParams(searchTitle, page, pageSize);\n    BoardsDataService.getAll(params).then(response => {\n      const {\n        boards,\n        totalPages\n      } = response.data;\n      setBoards(boards);\n      setCount(totalPages);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(retrieveBoards, [page, pageSize]);\n\n  const refreshList = () => {\n    retrieveBoards();\n  };\n\n  const removeAllBoards = () => {\n    BoardsDataService.removeAll().then(response => {\n      console.log(response.data);\n      refreshList();\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const findByTitle = () => {\n    setPage(1);\n    retrieveBoards();\n  };\n\n  const openBoards = rowIndex => {\n    const id = boardsRef.current[rowIndex].id;\n    props.history.push(\"/boards/\" + id);\n  };\n\n  const deleteBoards = rowIndex => {\n    const id = boardsRef.current[rowIndex].id;\n    BoardsDataService.remove(id).then(response => {\n      props.history.push(\"/boards\");\n      let newBoards = [...boardsRef.current];\n      newBoards.splice(rowIndex, 1);\n      setBoards(newBoards);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  const handlePageSizeChange = event => {\n    setPageSize(event.target.value);\n    setPage(1);\n  };\n\n  const columns = useMemo(() => [{\n    Header: \"Title\",\n    accessor: \"title\"\n  }, {\n    Header: \"Description\",\n    accessor: \"description\"\n  }, {\n    Header: \"Status\",\n    accessor: \"published\",\n    Cell: props => {\n      return props.value ? \"Published\" : \"Pending\";\n    }\n  }, {\n    Header: \"Actions\",\n    accessor: \"actions\",\n    Cell: props => {\n      const rowIdx = props.row.id;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => openBoards(rowIdx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"far fa-edit action mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => deleteBoards(rowIdx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-trash action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      })));\n    }\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data: boards\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Search by title\",\n    value: searchTitle,\n    onChange: onChangeSearchTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    type: \"button\",\n    onClick: findByTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Search\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, \"Items per Page: \", /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handlePageSizeChange,\n    value: pageSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, pageSizes.map(size => /*#__PURE__*/React.createElement(\"option\", {\n    key: size,\n    value: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, size))), /*#__PURE__*/React.createElement(Pagination, {\n    className: \"my-3\",\n    count: count,\n    page: page,\n    siblingCount: 1,\n    boundaryCount: 1,\n    variant: \"outlined\",\n    shape: \"rounded\",\n    onChange: handlePageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"table\", Object.assign({\n    className: \"table table-striped table-bordered\"\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }), column.render(\"Header\")))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 23\n        }\n      }), cell.render(\"Cell\"));\n    }));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-sm btn-danger\",\n    onClick: removeAllBoards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, \"Remove All\")));\n};\n\nexport default BoardsList;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/BoardsList.js"],"names":["React","useState","useEffect","useMemo","useRef","Pagination","BoardsDataService","useTable","BoardsList","props","boards","setBoards","searchTitle","setSearchTitle","boardsRef","page","setPage","count","setCount","pageSize","setPageSize","pageSizes","current","onChangeSearchTitle","e","target","value","getRequestParams","params","retrieveBoards","getAll","then","response","totalPages","data","console","log","catch","refreshList","removeAllBoards","removeAll","findByTitle","openBoards","rowIndex","id","history","push","deleteBoards","remove","newBoards","splice","handlePageChange","event","handlePageSizeChange","columns","Header","accessor","Cell","rowIdx","row","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","size","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA8CC,MAA9C,QAA4D,OAA5D;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMa,SAAS,GAAGV,MAAM,EAAxB;AAEA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,CAAD,CAAxC;AAEA,QAAMoB,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAlB;AAEAP,EAAAA,SAAS,CAACQ,OAAV,GAAoBZ,MAApB;;AAEA,QAAMa,mBAAmB,GAAIC,CAAD,IAAO;AACjC,UAAMZ,WAAW,GAAGY,CAAC,CAACC,MAAF,CAASC,KAA7B;AACAb,IAAAA,cAAc,CAACD,WAAD,CAAd;AACD,GAHD;;AAKA,QAAMe,gBAAgB,GAAG,CAACf,WAAD,EAAcG,IAAd,EAAoBI,QAApB,KAAiC;AACxD,QAAIS,MAAM,GAAG,EAAb;;AAEA,QAAIhB,WAAJ,EAAiB;AACfgB,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBhB,WAAlB;AACD;;AAED,QAAIG,IAAJ,EAAU;AACRa,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBb,IAAI,GAAG,CAAxB;AACD;;AAED,QAAII,QAAJ,EAAc;AACZS,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiBT,QAAjB;AACD;;AAED,WAAOS,MAAP;AACD,GAhBD;;AAkBA,QAAMC,cAAc,GAAG,MAAM;AAC3B,UAAMD,MAAM,GAAGD,gBAAgB,CAACf,WAAD,EAAcG,IAAd,EAAoBI,QAApB,CAA/B;AAEAb,IAAAA,iBAAiB,CAACwB,MAAlB,CAAyBF,MAAzB,EACGG,IADH,CACSC,QAAD,IAAc;AAClB,YAAM;AAAEtB,QAAAA,MAAF;AAAUuB,QAAAA;AAAV,UAAyBD,QAAQ,CAACE,IAAxC;AAEAvB,MAAAA,SAAS,CAACD,MAAD,CAAT;AACAQ,MAAAA,QAAQ,CAACe,UAAD,CAAR;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACD,KARH,EASGG,KATH,CASUb,CAAD,IAAO;AACZW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAZ;AACD,KAXH;AAYD,GAfD;;AAiBAtB,EAAAA,SAAS,CAAC2B,cAAD,EAAiB,CAACd,IAAD,EAAOI,QAAP,CAAjB,CAAT;;AAEA,QAAMmB,WAAW,GAAG,MAAM;AACxBT,IAAAA,cAAc;AACf,GAFD;;AAIA,QAAMU,eAAe,GAAG,MAAM;AAC5BjC,IAAAA,iBAAiB,CAACkC,SAAlB,GACGT,IADH,CACSC,QAAD,IAAc;AAClBG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACAI,MAAAA,WAAW;AACZ,KAJH,EAKGD,KALH,CAKUb,CAAD,IAAO;AACZW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAZ;AACD,KAPH;AAQD,GATD;;AAWA,QAAMiB,WAAW,GAAG,MAAM;AACxBzB,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAa,IAAAA,cAAc;AACf,GAHD;;AAKA,QAAMa,UAAU,GAAIC,QAAD,IAAc;AAC/B,UAAMC,EAAE,GAAG9B,SAAS,CAACQ,OAAV,CAAkBqB,QAAlB,EAA4BC,EAAvC;AAEAnC,IAAAA,KAAK,CAACoC,OAAN,CAAcC,IAAd,CAAmB,aAAaF,EAAhC;AACD,GAJD;;AAMA,QAAMG,YAAY,GAAIJ,QAAD,IAAc;AACjC,UAAMC,EAAE,GAAG9B,SAAS,CAACQ,OAAV,CAAkBqB,QAAlB,EAA4BC,EAAvC;AAEAtC,IAAAA,iBAAiB,CAAC0C,MAAlB,CAAyBJ,EAAzB,EACGb,IADH,CACSC,QAAD,IAAc;AAClBvB,MAAAA,KAAK,CAACoC,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AAEA,UAAIG,SAAS,GAAG,CAAC,GAAGnC,SAAS,CAACQ,OAAd,CAAhB;AACA2B,MAAAA,SAAS,CAACC,MAAV,CAAiBP,QAAjB,EAA2B,CAA3B;AAEAhC,MAAAA,SAAS,CAACsC,SAAD,CAAT;AACD,KARH,EASGZ,KATH,CASUb,CAAD,IAAO;AACZW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAZ;AACD,KAXH;AAYD,GAfD;;AAiBA,QAAM2B,gBAAgB,GAAG,CAACC,KAAD,EAAQ1B,KAAR,KAAkB;AACzCV,IAAAA,OAAO,CAACU,KAAD,CAAP;AACD,GAFD;;AAIA,QAAM2B,oBAAoB,GAAID,KAAD,IAAW;AACtChC,IAAAA,WAAW,CAACgC,KAAK,CAAC3B,MAAN,CAAaC,KAAd,CAAX;AACAV,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAKA,QAAMsC,OAAO,GAAGnD,OAAO,CACrB,MAAM,CACJ;AACEoD,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADI,EAKJ;AACED,IAAAA,MAAM,EAAE,aADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GALI,EASJ;AACED,IAAAA,MAAM,EAAE,QADV;AAEEC,IAAAA,QAAQ,EAAE,WAFZ;AAGEC,IAAAA,IAAI,EAAGhD,KAAD,IAAW;AACf,aAAOA,KAAK,CAACiB,KAAN,GAAc,WAAd,GAA4B,SAAnC;AACD;AALH,GATI,EAgBJ;AACE6B,IAAAA,MAAM,EAAE,SADV;AAEEC,IAAAA,QAAQ,EAAE,SAFZ;AAGEC,IAAAA,IAAI,EAAGhD,KAAD,IAAW;AACf,YAAMiD,MAAM,GAAGjD,KAAK,CAACkD,GAAN,CAAUf,EAAzB;AACA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,OAAO,EAAE,MAAMF,UAAU,CAACgB,MAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAKE;AAAM,QAAA,OAAO,EAAE,MAAMX,YAAY,CAACW,MAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,CADF;AAWD;AAhBH,GAhBI,CADe,EAoCrB,EApCqB,CAAvB;AAuCA,QAAM;AACJE,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFzD,QAAQ,CAAC;AACX+C,IAAAA,OADW;AAEXpB,IAAAA,IAAI,EAAExB;AAFK,GAAD,CANZ;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,KAAK,EAAEE,WAJT;AAKE,IAAA,QAAQ,EAAEW,mBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAEkB,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CARF,CADF,CADF,eAsBE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,kBADH,eAEE;AAAQ,IAAA,QAAQ,EAAEY,oBAAlB;AAAwC,IAAA,KAAK,EAAElC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,SAAS,CAAC4C,GAAV,CAAeC,IAAD,iBACb;AAAQ,IAAA,GAAG,EAAEA,IAAb;AAAmB,IAAA,KAAK,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CADD,CADH,CAFF,eAUE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,KAAK,EAAEjD,KAFT;AAGE,IAAA,IAAI,EAAEF,IAHR;AAIE,IAAA,YAAY,EAAE,CAJhB;AAKE,IAAA,aAAa,EAAE,CALjB;AAME,IAAA,OAAO,EAAC,UANV;AAOE,IAAA,KAAK,EAAC,SAPR;AAQE,IAAA,QAAQ,EAAEoC,gBARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,eAuBE;AACE,IAAA,SAAS,EAAC;AADZ,KAEMS,aAAa,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAACG,GAAb,CAAkBE,WAAD,iBAChB,4CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,WAAW,CAACE,OAAZ,CAAoBJ,GAApB,CAAyBK,MAAD,iBACvB,4CAAQA,MAAM,CAACC,cAAP,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,MAAM,CAACE,MAAP,CAAc,QAAd,CADH,CADD,CADH,CADD,CADH,CAJF,eAeE,+CAAWX,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGE,IAAI,CAACE,GAAL,CAAS,CAACN,GAAD,EAAMc,CAAN,KAAY;AACpBT,IAAAA,UAAU,CAACL,GAAD,CAAV;AACA,wBACE,4CAAQA,GAAG,CAACe,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGf,GAAG,CAACgB,KAAJ,CAAUV,GAAV,CAAeW,IAAD,IAAU;AACvB,0BACE,4CAAQA,IAAI,CAACC,YAAL,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ,CAA9B,CADF;AAGD,KAJA,CADH,CADF;AASD,GAXA,CADH,CAfF,CAvBF,CAtBF,eA6EE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,OAAO,EAAEjC,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CA7EF,CADF;AAqFD,CAlPD;;AAoPA,eAAe/B,UAAf","sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport BoardsDataService from \"../services/BoardsService\";\nimport { useTable } from \"react-table\";\n\nconst BoardsList = (props) => {\n  const [boards, setBoards] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const boardsRef = useRef();\n\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(0);\n  const [pageSize, setPageSize] = useState(3);\n\n  const pageSizes = [3, 6, 9];\n\n  boardsRef.current = boards;\n\n  const onChangeSearchTitle = (e) => {\n    const searchTitle = e.target.value;\n    setSearchTitle(searchTitle);\n  };\n\n  const getRequestParams = (searchTitle, page, pageSize) => {\n    let params = {};\n\n    if (searchTitle) {\n      params[\"title\"] = searchTitle;\n    }\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (pageSize) {\n      params[\"size\"] = pageSize;\n    }\n\n    return params;\n  };\n\n  const retrieveBoards = () => {\n    const params = getRequestParams(searchTitle, page, pageSize);\n\n    BoardsDataService.getAll(params)\n      .then((response) => {\n        const { boards, totalPages } = response.data;\n\n        setBoards(boards);\n        setCount(totalPages);\n\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(retrieveBoards, [page, pageSize]);\n\n  const refreshList = () => {\n    retrieveBoards();\n  };\n\n  const removeAllBoards = () => {\n    BoardsDataService.removeAll()\n      .then((response) => {\n        console.log(response.data);\n        refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const findByTitle = () => {\n    setPage(1);\n    retrieveBoards();\n  };\n\n  const openBoards = (rowIndex) => {\n    const id = boardsRef.current[rowIndex].id;\n\n    props.history.push(\"/boards/\" + id);\n  };\n\n  const deleteBoards = (rowIndex) => {\n    const id = boardsRef.current[rowIndex].id;\n\n    BoardsDataService.remove(id)\n      .then((response) => {\n        props.history.push(\"/boards\");\n\n        let newBoards = [...boardsRef.current];\n        newBoards.splice(rowIndex, 1);\n\n        setBoards(newBoards);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  const handlePageSizeChange = (event) => {\n    setPageSize(event.target.value);\n    setPage(1);\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Title\",\n        accessor: \"title\",\n      },\n      {\n        Header: \"Description\",\n        accessor: \"description\",\n      },\n      {\n        Header: \"Status\",\n        accessor: \"published\",\n        Cell: (props) => {\n          return props.value ? \"Published\" : \"Pending\";\n        },\n      },\n      {\n        Header: \"Actions\",\n        accessor: \"actions\",\n        Cell: (props) => {\n          const rowIdx = props.row.id;\n          return (\n            <div>\n              <span onClick={() => openBoards(rowIdx)}>\n                <i className=\"far fa-edit action mr-2\"></i>\n              </span>\n\n              <span onClick={() => deleteBoards(rowIdx)}>\n                <i className=\"fas fa-trash action\"></i>\n              </span>\n            </div>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data: boards,\n  });\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by title\"\n            value={searchTitle}\n            onChange={onChangeSearchTitle}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByTitle}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"col-md-12 list\">\n        <div className=\"mt-3\">\n          {\"Items per Page: \"}\n          <select onChange={handlePageSizeChange} value={pageSize}>\n            {pageSizes.map((size) => (\n              <option key={size} value={size}>\n                {size}\n              </option>\n            ))}\n          </select>\n\n          <Pagination\n            className=\"my-3\"\n            count={count}\n            page={page}\n            siblingCount={1}\n            boundaryCount={1}\n            variant=\"outlined\"\n            shape=\"rounded\"\n            onChange={handlePageChange}\n          />\n        </div>\n\n        <table\n          className=\"table table-striped table-bordered\"\n          {...getTableProps()}\n        >\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps()}>\n                    {column.render(\"Header\")}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"col-md-8\">\n        <button className=\"btn btn-sm btn-danger\" onClick={removeAllBoards}>\n          Remove All\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BoardsList;\n"]},"metadata":{},"sourceType":"module"}