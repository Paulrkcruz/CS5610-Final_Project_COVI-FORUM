{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/home-screen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./home-screen.css\";\nimport { getAllThreads, searchAllThreads } from \"./thread\";\nimport ThreadList from \"../components/thread-list\";\nimport PageHead from \"../components/page-head\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../components/search-bar\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomeScreen = props => {\n  _s();\n\n  const [threads, setThreads] = useState([]);\n  const [searchThreads, setSearchThreads] = useState([]);\n  const [visibleThreads, setVisibleThreads] = useState([]);\n  const [dataAvailable, setDataAvailable] = useState(false);\n  const [searchDone, setSearchDone] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const PER_PAGE = 10;\n  const offset = currentPage * PER_PAGE;\n\n  const triggerSearch = () => {\n    if (searchTerm !== \"\") {\n      onSearch(searchTerm);\n    } else {\n      setSearchThreads(threads);\n    }\n  };\n\n  useEffect(() => {\n    if (searchThreads.length > 0) {\n      // search list\n      const currentPageData = searchThreads.slice(offset, offset + PER_PAGE);\n      setVisibleThreads(currentPageData);\n    } else {\n      const currentPageData = threads.slice(offset, offset + PER_PAGE);\n      setVisibleThreads(currentPageData);\n    }\n  }, [threads, searchThreads, offset]);\n\n  function handlePageClick({\n    selected: selectedPage\n  }) {\n    setCurrentPage(selectedPage);\n  }\n\n  useEffect(() => {\n    getAllThreads().then(response => {\n      // Insert users\n      setThreads(response.data); // Let UI know that the users are available\n\n      setDataAvailable(true);\n    }).catch(err => {\n      // TODO: Show error message\n      console.error(\"Failed to get all threads\", err);\n    });\n  }, []);\n\n  const onSearch = term => {\n    setDataAvailable(false);\n    searchAllThreads(term).then(response => {\n      // Insert users\n      setSearchThreads(response.data); // Let UI know that the users are available\n\n      setDataAvailable(true);\n      setSearchDone(true); // update the pagination\n    }).catch(err => {\n      // TODO: Show error message\n      console.error(\"Failed to get all threads\", err);\n    });\n  };\n\n  const resetSearch = () => {\n    setSearchTerm(\"\");\n    setSearchThreads([]);\n    setSearchDone(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-screen\",\n    children: [/*#__PURE__*/_jsxDEV(PageHead, {\n      className: \"title\",\n      title: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: // Show loader until we load the user list\n      dataAvailable ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: \"← Previous\",\n          nextLabel: \"Next →\",\n          pageCount: Math.ceil((searchThreads.length > 0 ? searchThreads.length : threads.length) / PER_PAGE),\n          onPageChange: handlePageClick,\n          containerClassName: \"pagination\",\n          previousLinkClassName: \"pagination__link\",\n          nextLinkClassName: \"pagination__link\",\n          disabledClassName: \"pagination__link--disabled\",\n          activeClassName: \"pagination__link--active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ThreadList, {\n          threads: visibleThreads\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: \"← Previous\",\n          nextLabel: \"Next →\",\n          pageCount: Math.ceil((searchThreads.length > 0 ? searchThreads.length : threads.length) / PER_PAGE),\n          onPageChange: handlePageClick,\n          containerClassName: \"pagination\",\n          previousLinkClassName: \"pagination__link\",\n          nextLinkClassName: \"pagination__link\",\n          disabledClassName: \"pagination__link--disabled\",\n          activeClassName: \"pagination__link--active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Puff\",\n        color: \"#4f5d75\",\n        height: 100,\n        width: 100,\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/thread/new_thread\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-new-thread\",\n          children: \"Create new thread\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        value: searchTerm,\n        search: triggerSearch,\n        onSearch: setSearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), searchDone ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetSearch,\n        className: \"search-info\",\n        children: searchThreads.length > 0 ? \"Reset search\" : \"No threads found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomeScreen, \"0eevAbaKln6FUHRum2z60FC6Mc0=\");\n\n_c = HomeScreen;\nexport default HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/home-screen.js"],"names":["React","useEffect","useState","getAllThreads","searchAllThreads","ThreadList","PageHead","Link","SearchBar","ReactPaginate","HomeScreen","props","threads","setThreads","searchThreads","setSearchThreads","visibleThreads","setVisibleThreads","dataAvailable","setDataAvailable","searchDone","setSearchDone","searchTerm","setSearchTerm","currentPage","setCurrentPage","PER_PAGE","offset","triggerSearch","onSearch","length","currentPageData","slice","handlePageClick","selected","selectedPage","then","response","data","catch","err","console","error","term","resetSearch","Math","ceil"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./home-screen.css\";\nimport { getAllThreads, searchAllThreads } from \"./thread\";\nimport ThreadList from \"../components/thread-list\";\nimport PageHead from \"../components/page-head\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../components/search-bar\";\nimport ReactPaginate from \"react-paginate\";\n\nconst HomeScreen = (props) => {\n  const [threads, setThreads] = useState([]);\n  const [searchThreads, setSearchThreads] = useState([]);\n  const [visibleThreads, setVisibleThreads] = useState([]);\n\n  const [dataAvailable, setDataAvailable] = useState(false);\n  const [searchDone, setSearchDone] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const PER_PAGE = 10;\n  const offset = currentPage * PER_PAGE;\n\n  const triggerSearch = () => {\n    if (searchTerm !== \"\") {\n      onSearch(searchTerm);\n    } else {\n      setSearchThreads(threads);\n    }\n  };\n\n  useEffect(() => {\n    if (searchThreads.length > 0) {\n      // search list\n      const currentPageData = searchThreads.slice(offset, offset + PER_PAGE);\n      setVisibleThreads(currentPageData);\n    } else {\n      const currentPageData = threads.slice(offset, offset + PER_PAGE);\n      setVisibleThreads(currentPageData);\n    }\n  }, [threads, searchThreads, offset]);\n\n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n\n  useEffect(() => {\n    getAllThreads()\n      .then((response) => {\n        // Insert users\n        setThreads(response.data);\n\n        // Let UI know that the users are available\n        setDataAvailable(true);\n      })\n      .catch((err) => {\n        // TODO: Show error message\n        console.error(\"Failed to get all threads\", err);\n      });\n  }, []);\n\n  const onSearch = (term) => {\n    setDataAvailable(false);\n    searchAllThreads(term)\n      .then((response) => {\n        // Insert users\n        setSearchThreads(response.data);\n\n        // Let UI know that the users are available\n        setDataAvailable(true);\n        setSearchDone(true);\n\n        // update the pagination\n      })\n      .catch((err) => {\n        // TODO: Show error message\n        console.error(\"Failed to get all threads\", err);\n      });\n  };\n\n  const resetSearch = () => {\n    setSearchTerm(\"\");\n    setSearchThreads([]);\n    setSearchDone(false);\n  };\n\n  return (\n    <div className=\"home-screen\">\n      <PageHead className=\"title\" title=\"Home\" />\n\n      <div className=\"container\">\n        {\n          // Show loader until we load the user list\n          dataAvailable ? (\n            <React.Fragment>\n              <ReactPaginate\n                previousLabel={\"← Previous\"}\n                nextLabel={\"Next →\"}\n                pageCount={Math.ceil(\n                  (searchThreads.length > 0\n                    ? searchThreads.length\n                    : threads.length) / PER_PAGE\n                )}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                previousLinkClassName={\"pagination__link\"}\n                nextLinkClassName={\"pagination__link\"}\n                disabledClassName={\"pagination__link--disabled\"}\n                activeClassName={\"pagination__link--active\"}\n              />\n              <ThreadList threads={visibleThreads} />\n              <ReactPaginate\n                previousLabel={\"← Previous\"}\n                nextLabel={\"Next →\"}\n                pageCount={Math.ceil(\n                  (searchThreads.length > 0\n                    ? searchThreads.length\n                    : threads.length) / PER_PAGE\n                )}\n                onPageChange={handlePageClick}\n                containerClassName={\"pagination\"}\n                previousLinkClassName={\"pagination__link\"}\n                nextLinkClassName={\"pagination__link\"}\n                disabledClassName={\"pagination__link--disabled\"}\n                activeClassName={\"pagination__link--active\"}\n              />\n            </React.Fragment>\n          ) : (\n            <Loader\n              type=\"Puff\"\n              color=\"#4f5d75\"\n              height={100}\n              width={100}\n              className=\"loader\"\n            />\n          )\n        }\n      </div>\n\n      <div className=\"aside\">\n        <Link to=\"/thread/new_thread\">\n          <div className=\"create-new-thread\">Create new thread</div>\n        </Link>\n        <SearchBar\n          value={searchTerm}\n          search={triggerSearch}\n          onSearch={setSearchTerm}\n        />\n        {searchDone ? (\n          <button onClick={resetSearch} className=\"search-info\">\n            {searchThreads.length > 0 ? \"Reset search\" : \"No threads found\"}\n          </button>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}