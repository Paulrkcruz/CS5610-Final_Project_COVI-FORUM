{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/search-bar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport \"./search-bar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = props => {\n  _s();\n\n  const inputRef = useRef();\n  const SearchButtonRef = useRef();\n\n  const triggerEvent = event => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      SearchButtonRef.current.click();\n    }\n  }; // Setup search\n\n\n  const initialSetup = () => {\n    if (inputRef.current) {\n      inputRef.current.addEventListener(\"keyup\", triggerEvent);\n      return () => {\n        inputRef.current.removeEventListener(\"keyup\", triggerEvent);\n      };\n    }\n  };\n\n  useEffect(initialSetup, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      id: \"search\",\n      alt: \"search\",\n      name: \"search\",\n      placeholder: \"Search for a post\",\n      \"aria-label\": \"Search for post\",\n      type: \"text\",\n      value: props.value,\n      onChange: event => props.onSearch(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: SearchButtonRef,\n      \"aria-label\": \"Search in Posts\",\n      onClick: props.search,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"PwcgU5rq8ykL5JMK3Bbsb8IAFeE=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/search-bar/index.js"],"names":["React","useEffect","useRef","SearchBar","props","inputRef","SearchButtonRef","triggerEvent","event","keyCode","preventDefault","current","click","initialSetup","addEventListener","removeEventListener","value","onSearch","target","search"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAO,kBAAP;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,QAAQ,GAAGH,MAAM,EAAvB;AACA,QAAMI,eAAe,GAAGJ,MAAM,EAA9B;;AAEA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACxBD,MAAAA,KAAK,CAACE,cAAN;AACAJ,MAAAA,eAAe,CAACK,OAAhB,CAAwBC,KAAxB;AACD;AACF,GALD,CAJ2B,CAU7B;;;AACE,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIR,QAAQ,CAACM,OAAb,EAAsB;AACpBN,MAAAA,QAAQ,CAACM,OAAT,CAAiBG,gBAAjB,CAAkC,OAAlC,EAA2CP,YAA3C;AACA,aAAO,MAAM;AACXF,QAAAA,QAAQ,CAACM,OAAT,CAAiBI,mBAAjB,CAAqC,OAArC,EAA8CR,YAA9C;AACD,OAFD;AAGD;AACF,GAPD;;AASAN,EAAAA,SAAS,CAACY,YAAD,EAAe,EAAf,CAAT;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AACE,MAAA,GAAG,EAAER,QADP;AAEE,MAAA,EAAE,EAAC,QAFL;AAGE,MAAA,GAAG,EAAC,QAHN;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,WAAW,EAAC,mBALd;AAME,oBAAW,iBANb;AAOE,MAAA,IAAI,EAAC,MAPP;AAQE,MAAA,KAAK,EAAED,KAAK,CAACY,KARf;AASE,MAAA,QAAQ,EAAGR,KAAD,IAAWJ,KAAK,CAACa,QAAN,CAAeT,KAAK,CAACU,MAAN,CAAaF,KAA5B;AATvB;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AACE,MAAA,GAAG,EAAEV,eADP;AAEE,oBAAW,iBAFb;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACe,MAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA5CD;;GAAMhB,S;;KAAAA,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport \"./search-bar.css\";\n\nconst SearchBar = (props) => {\n  const inputRef = useRef();\n  const SearchButtonRef = useRef();\n\n  const triggerEvent = (event) => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      SearchButtonRef.current.click();\n    }\n  };\n// Setup search\n  const initialSetup = () => {\n    if (inputRef.current) {\n      inputRef.current.addEventListener(\"keyup\", triggerEvent);\n      return () => {\n        inputRef.current.removeEventListener(\"keyup\", triggerEvent);\n      };\n    }\n  };\n\n  useEffect(initialSetup, []);\n\n  return (\n    <div className=\"search-bar\">\n      <input\n        ref={inputRef}\n        id=\"search\"\n        alt=\"search\"\n        name=\"search\"\n        placeholder=\"Search for a post\"\n        aria-label=\"Search for post\"\n        type=\"text\"\n        value={props.value}\n        onChange={(event) => props.onSearch(event.target.value)}\n      ></input>\n      <button\n        ref={SearchButtonRef}\n        aria-label=\"Search in Posts\"\n        onClick={props.search}\n      >\n        Search\n      </button>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}