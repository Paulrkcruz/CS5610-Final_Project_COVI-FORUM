{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/covid-stats/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Papa from \"papaparse\";\nimport axios from \"axios\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Leaflet from \"./Map.js\";\nimport DateSlider from \"./DateSlider.js\";\nimport DataSelector from \"./DataSelector.js\";\nconst infectedUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\";\nconst recoveredUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv\";\nconst deathUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      infectedData: [],\n      deathData: [],\n      recoveredData: [],\n      date: \"1/22/20\",\n      infectedOn: true,\n      deathOn: false,\n      recoveredOn: false\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.toggleInfectedData = this.toggleInfectedData.bind(this);\n    this.toggleRecoveredData = this.toggleRecoveredData.bind(this);\n    this.toggleDeathData = this.toggleDeathData.bind(this);\n  }\n\n  componentDidMount() {\n    const parsedInfectedData = App.pullAndParseUrl(infectedUrl);\n    const parsedRecoveredData = App.pullAndParseUrl(recoveredUrl);\n    const parsedDeathData = App.pullAndParseUrl(deathUrl);\n    console.log(parsedInfectedData);\n    parsedInfectedData.then(result => {\n      this.setState({\n        infectedData: result.data\n      });\n    });\n    parsedRecoveredData.then(result => {\n      this.setState({\n        recoveredData: result.data\n      });\n    });\n    parsedDeathData.then(result => {\n      this.setState({\n        deathData: result.data\n      });\n    });\n  }\n\n  static pullAndParseUrl(url) {\n    return axios.get(url).then(response => Papa.parse(response.data, {\n      header: true\n    }));\n  }\n\n  handleDateChange(selectedDate) {\n    this.setState({\n      \"date\": selectedDate\n    });\n  }\n\n  toggleInfectedData() {\n    this.setState({\n      infectedOn: !this.state.infectedOn\n    });\n  }\n\n  toggleRecoveredData() {\n    this.setState({\n      recoveredOn: !this.state.recoveredOn\n    });\n  }\n\n  toggleDeathData() {\n    this.setState({\n      deathOn: !this.state.deathOn\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      id: \"title\",\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Visualizing COVID-19 Over Time\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Leaflet, {\n      infectedData: this.state.infectedData,\n      infectedOn: this.state.infectedOn,\n      recoveredData: this.state.recoveredData,\n      recoveredOn: this.state.recoveredOn,\n      deathData: this.state.deathData,\n      deathOn: this.state.deathOn,\n      date: this.state.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, this.state.date, /*#__PURE__*/React.createElement(DateSlider, {\n      handleDateChange: this.handleDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DataSelector, {\n      toggleInfectedData: this.toggleInfectedData,\n      infectedOn: this.state.infectedOn,\n      toggleRecoveredData: this.toggleRecoveredData,\n      recoveredOn: this.state.recoveredOn,\n      toggleDeathData: this.toggleDeathData,\n      deathOn: this.state.deathOn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      id: \"title\",\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"This is a depiction of the spread of COVID-19 over time. We rely on the Johns Hopkins CSSE Data Repository, which is updated once a day at around 23:59 UTC. For that reason, the most recent data our slider allows users to select is yesterday's.\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/covid-stats/App.js"],"names":["React","Papa","axios","Grid","Typography","Leaflet","DateSlider","DataSelector","infectedUrl","recoveredUrl","deathUrl","App","Component","constructor","props","state","infectedData","deathData","recoveredData","date","infectedOn","deathOn","recoveredOn","handleDateChange","bind","toggleInfectedData","toggleRecoveredData","toggleDeathData","componentDidMount","parsedInfectedData","pullAndParseUrl","parsedRecoveredData","parsedDeathData","console","log","then","result","setState","data","url","get","response","parse","header","selectedDate","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Papa from \"papaparse\";\nimport axios from \"axios\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Leaflet from \"./Map.js\";\nimport DateSlider from \"./DateSlider.js\";\nimport DataSelector from \"./DataSelector.js\";\n\nconst infectedUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\";\nconst recoveredUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv\";\nconst deathUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv\"\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      infectedData: [],\n      deathData: [],\n      recoveredData: [],\n      date: \"1/22/20\",\n      infectedOn: true,\n      deathOn: false,\n      recoveredOn: false,\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.toggleInfectedData = this.toggleInfectedData.bind(this);\n    this.toggleRecoveredData = this.toggleRecoveredData.bind(this);\n    this.toggleDeathData = this.toggleDeathData.bind(this);\n\n  }\n\n  componentDidMount() {\n    const parsedInfectedData = App.pullAndParseUrl(infectedUrl);\n    const parsedRecoveredData = App.pullAndParseUrl(recoveredUrl);\n    const parsedDeathData = App.pullAndParseUrl(deathUrl);\n\n    console.log(parsedInfectedData);\n\n    parsedInfectedData.then(result => {\n      this.setState({ infectedData: result.data });\n    });\n\n    parsedRecoveredData.then(result => {\n      this.setState({ recoveredData: result.data });\n    });\n\n    parsedDeathData.then(result => {\n      this.setState({ deathData: result.data });\n    });\n  }\n\n  static pullAndParseUrl(url) {\n    return axios.get(url).then(response => Papa.parse(response.data, { header: true }));\n  }\n\n\n  handleDateChange(selectedDate) {\n    this.setState({ \"date\": selectedDate });\n  };\n\n  toggleInfectedData() {\n    this.setState({infectedOn: !this.state.infectedOn});\n  }\n\n  toggleRecoveredData() {\n    this.setState({recoveredOn: !this.state.recoveredOn});\n  }\n\n  toggleDeathData() {\n    this.setState({deathOn: !this.state.deathOn});\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Grid container justify=\"center\"   alignItems=\"center\" spacing={3}>\n          <Grid item xs={8}>\n            <Typography id=\"title\" variant='h3'>\n              Visualizing COVID-19 Over Time\n            </Typography>\n          </Grid>\n          <Grid item xs={10}>\n            <Leaflet\n              infectedData={this.state.infectedData}\n              infectedOn={this.state.infectedOn}\n              recoveredData={this.state.recoveredData}\n              recoveredOn={this.state.recoveredOn}\n              deathData={this.state.deathData}\n              deathOn={this.state.deathOn}\n              date={this.state.date}\n            />\n          </Grid>\n          <Grid item xs={8}>\n            {this.state.date}\n            <DateSlider\n              handleDateChange={this.handleDateChange}\n            />\n          </Grid>\n          <Grid item xs={8}>\n            <DataSelector\n              toggleInfectedData={this.toggleInfectedData}\n              infectedOn={this.state.infectedOn}\n              toggleRecoveredData={this.toggleRecoveredData}\n              recoveredOn={this.state.recoveredOn}\n              toggleDeathData={this.toggleDeathData}\n              deathOn={this.state.deathOn}\n            />\n          </Grid>\n          <Grid item xs={8}>\n            <Typography id=\"title\" variant='caption'>\n              This is a depiction of the spread of COVID-19 over time. We rely on the Johns Hopkins CSSE Data Repository, which is\n              updated once a day at around 23:59 UTC. For that reason, the most recent data our slider allows users to select is\n              yesterday's.\n            </Typography>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}