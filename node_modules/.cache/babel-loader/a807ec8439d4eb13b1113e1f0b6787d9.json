{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/Boards.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TutorialDataService from \"../services/TutorialService\";\n\nconst Boards = props => {\n  const initialBoardsState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [currentBoards, setCurrentBoards] = useState(initialBoardsState);\n  const [message, setMessage] = useState(\"\");\n\n  const getBoards = id => {\n    BoardsDataService.get(id).then(response => {\n      setCurrentBoards(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getTutorial(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCurrentTutorial({ ...currentTutorial,\n      [name]: value\n    });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      id: currentTutorial.id,\n      title: currentTutorial.title,\n      description: currentTutorial.description,\n      published: status\n    };\n    TutorialDataService.update(currentTutorial.id, data).then(response => {\n      setCurrentTutorial({ ...currentTutorial,\n        published: status\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const updateTutorial = () => {\n    TutorialDataService.update(currentTutorial.id, currentTutorial).then(response => {\n      console.log(response.data);\n      setMessage(\"The tutorial was updated successfully!\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const deleteTutorial = () => {\n    TutorialDataService.remove(currentTutorial.id).then(response => {\n      console.log(response.data);\n      props.history.push(\"/tutorials\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, currentTutorial ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Tutorial\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"title\",\n    name: \"title\",\n    value: currentTutorial.title,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"description\",\n    name: \"description\",\n    value: currentTutorial.description,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Status:\")), currentTutorial.published ? \"Published\" : \"Pending\")), currentTutorial.published ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"badge badge-primary mr-2\",\n    onClick: () => updatePublished(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"UnPublish\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"badge badge-primary mr-2\",\n    onClick: () => updatePublished(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Publish\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"badge badge-danger mr-2\",\n    onClick: deleteTutorial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"badge badge-success\",\n    onClick: updateTutorial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, message)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Please click on a Tutorial...\")));\n};\n\nexport default Tutorial;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/Boards.js"],"names":["React","useState","useEffect","TutorialDataService","Boards","props","initialBoardsState","id","title","description","published","currentBoards","setCurrentBoards","message","setMessage","getBoards","BoardsDataService","get","then","response","data","console","log","catch","e","getTutorial","match","params","handleInputChange","event","name","value","target","setCurrentTutorial","currentTutorial","updatePublished","status","update","updateTutorial","deleteTutorial","remove","history","push","Tutorial"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TutorialDataService from \"../services/TutorialService\";\n\nconst Boards = props => {\n  const initialBoardsState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [currentBoards, setCurrentBoards] = useState(initialBoardsState);\n  const [message, setMessage] = useState(\"\");\n\n  const getBoards = id => {\n    BoardsDataService.get(id)\n      .then(response => {\n        setCurrentBoards(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getTutorial(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentTutorial({ ...currentTutorial, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      id: currentTutorial.id,\n      title: currentTutorial.title,\n      description: currentTutorial.description,\n      published: status\n    };\n\n    TutorialDataService.update(currentTutorial.id, data)\n      .then(response => {\n        setCurrentTutorial({ ...currentTutorial, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateTutorial = () => {\n    TutorialDataService.update(currentTutorial.id, currentTutorial)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The tutorial was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const deleteTutorial = () => {\n    TutorialDataService.remove(currentTutorial.id)\n      .then(response => {\n        console.log(response.data);\n        props.history.push(\"/tutorials\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div>\n      {currentTutorial ? (\n        <div className=\"edit-form\">\n          <h4>Tutorial</h4>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                name=\"title\"\n                value={currentTutorial.title}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                name=\"description\"\n                value={currentTutorial.description}\n                onChange={handleInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>\n                <strong>Status:</strong>\n              </label>\n              {currentTutorial.published ? \"Published\" : \"Pending\"}\n            </div>\n          </form>\n\n          {currentTutorial.published ? (\n            <button\n              className=\"badge badge-primary mr-2\"\n              onClick={() => updatePublished(false)}\n            >\n              UnPublish\n            </button>\n          ) : (\n            <button\n              className=\"badge badge-primary mr-2\"\n              onClick={() => updatePublished(true)}\n            >\n              Publish\n            </button>\n          )}\n\n          <button className=\"badge badge-danger mr-2\" onClick={deleteTutorial}>\n            Delete\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateTutorial}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Tutorial...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Tutorial;\n"]},"metadata":{},"sourceType":"module"}