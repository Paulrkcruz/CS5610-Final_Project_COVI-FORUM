{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/covid-stats/Map.js\";\nimport React from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { Map, Circle, TileLayer } from 'react-leaflet';\nexport default class Leaflet extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const position = [25, -35];\n    const zoom = 2;\n    return /*#__PURE__*/React.createElement(Map, {\n      center: position,\n      zoom: zoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: '&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }), this.props.infectedOn && /*#__PURE__*/React.createElement(MyCircles, {\n      data: this.props.infectedData,\n      date: this.props.date,\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }), this.props.recoveredOn && /*#__PURE__*/React.createElement(MyCircles, {\n      data: this.props.recoveredData,\n      date: this.props.date,\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), this.props.deathOn && /*#__PURE__*/React.createElement(MyCircles, {\n      data: this.props.deathData,\n      date: this.props.date,\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst MyCircles = props => {\n  return props.data.map((row, i) => {\n    if (row[props.date] <= 0) {\n      // No cases on this date\n      return;\n    }\n\n    if (row[\"Lat\"] != null && row[\"Long\"] != null) {\n      return /*#__PURE__*/React.createElement(Circle, {\n        key: i,\n        center: [row[\"Lat\"], row[\"Long\"]],\n        radius: 1000 * Math.sqrt(row[props.date]),\n        fillOpacity: 0.5,\n        fillColor: props.color,\n        stroke: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/covid-stats/Map.js"],"names":["React","withStyles","Map","Circle","TileLayer","Leaflet","Component","constructor","props","render","position","zoom","infectedOn","infectedData","date","recoveredOn","recoveredData","deathOn","deathData","MyCircles","data","map","row","i","Math","sqrt","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,QAAuC,eAAvC;AAGA,eAAe,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,CAAC,EAAD,EAAK,CAAC,EAAN,CAAjB;AACA,UAAMC,IAAI,GAAG,CAAb;AACA,wBACE,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAED,QAAb;AAAuB,MAAA,IAAI,EAAEC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,GAAG,EAAE,oDADP;AAEE,MAAA,WAAW,EAAE,6EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKG,KAAKH,KAAL,CAAWI,UAAX,iBACC,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,YAA5B;AAA0C,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,IAA3D;AAAiE,MAAA,KAAK,EAAC,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAQG,KAAKN,KAAL,CAAWO,WAAX,iBACC,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWQ,aAA5B;AAA2C,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWM,IAA5D;AAAkE,MAAA,KAAK,EAAC,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAWG,KAAKN,KAAL,CAAWS,OAAX,iBACC,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWU,SAA5B;AAAuC,MAAA,IAAI,EAAE,KAAKV,KAAL,CAAWM,IAAxD;AAA8D,MAAA,KAAK,EAAC,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADF;AAgBD;;AAvBkD;;AA0BrD,MAAMK,SAAS,GAAIX,KAAD,IAAW;AAC3B,SACEA,KAAK,CAACY,IAAN,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAMC,CAAN,KAAY;AACzB,QAAID,GAAG,CAACd,KAAK,CAACM,IAAP,CAAH,IAAmB,CAAvB,EAA0B;AACxB;AACA;AACD;;AACD,QAAIQ,GAAG,CAAC,KAAD,CAAH,IAAc,IAAd,IAAsBA,GAAG,CAAC,MAAD,CAAH,IAAe,IAAzC,EAA+C;AAC7C,0BACE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEC,CADP;AAEE,QAAA,MAAM,EAAE,CAACD,GAAG,CAAC,KAAD,CAAJ,EAAaA,GAAG,CAAC,MAAD,CAAhB,CAFV;AAGE,QAAA,MAAM,EAAE,OAAOE,IAAI,CAACC,IAAL,CAAUH,GAAG,CAACd,KAAK,CAACM,IAAP,CAAb,CAHjB;AAIE,QAAA,WAAW,EAAE,GAJf;AAKE,QAAA,SAAS,EAAEN,KAAK,CAACkB,KALnB;AAME,QAAA,MAAM,EAAE,KANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASC;AACF,GAhBH,CADF;AAoBD,CArBD","sourcesContent":["import React from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Map, Circle, TileLayer } from 'react-leaflet';\n\n\nexport default class Leaflet extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const position = [25, -35];\n    const zoom = 2;\n    return (\n      <Map center={position} zoom={zoom}>\n        <TileLayer\n          url={\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}\n          attribution={'&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'}\n        />\n        {this.props.infectedOn &&\n          <MyCircles data={this.props.infectedData} date={this.props.date} color=\"red\"/>\n        }\n        {this.props.recoveredOn &&\n          <MyCircles data={this.props.recoveredData} date={this.props.date} color=\"green\"/>\n        }\n        {this.props.deathOn &&\n          <MyCircles data={this.props.deathData} date={this.props.date} color=\"black\"/>\n        }\n      </Map>)\n  }\n}\n\nconst MyCircles = (props) => {\n  return (\n    props.data.map((row, i) => {\n      if (row[props.date] <= 0) {\n        // No cases on this date\n        return;\n      }\n      if (row[\"Lat\"] != null && row[\"Long\"] != null) {\n        return (\n          <Circle\n            key={i}\n            center={[row[\"Lat\"], row[\"Long\"]]}\n            radius={1000 * Math.sqrt(row[props.date])}\n            fillOpacity={0.5}\n            fillColor={props.color}\n            stroke={false}\n          />)\n        }\n      }\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"module"}