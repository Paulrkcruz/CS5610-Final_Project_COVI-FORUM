{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/BoardsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport BoardsDataService from \"../services/BoardsService\";\nimport useTable from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoardsList = props => {\n  _s();\n\n  const [boards, setBoards] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const boardsRef = useRef();\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(0);\n  const [pageSize, setPageSize] = useState(3);\n  const pageSizes = [3, 6, 9];\n  boardsRef.current = boards;\n\n  const onChangeSearchTitle = e => {\n    const searchTitle = e.target.value;\n    setSearchTitle(searchTitle);\n  };\n\n  const getRequestParams = (searchTitle, page, pageSize) => {\n    let params = {};\n\n    if (searchTitle) {\n      params[\"title\"] = searchTitle;\n    }\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (pageSize) {\n      params[\"size\"] = pageSize;\n    }\n\n    return params;\n  };\n\n  const retrieveBoards = () => {\n    const params = getRequestParams(searchTitle, page, pageSize);\n    BoardsDataService.getAllBoards(params).then(response => {\n      const {\n        boards,\n        totalPages\n      } = response.data;\n      setBoards(boards);\n      setCount(totalPages);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(retrieveBoards, [page, pageSize]);\n\n  const refreshList = () => {\n    retrieveBoards();\n  };\n\n  const removeAllBoards = () => {\n    BoardsDataService.deleteAllBoards().then(response => {\n      console.log(response.data);\n      refreshList();\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const findByTitle = () => {\n    setPage(1);\n    retrieveBoards();\n  };\n\n  const openBoards = rowIndex => {\n    const id = boardsRef.current[rowIndex].id;\n    props.history.push(\"/boards/\" + id);\n  };\n\n  const deleteBoards = rowIndex => {\n    const id = boardsRef.current[rowIndex].id;\n    BoardsDataService.deleteBoards(id).then(response => {\n      props.history.push(\"/boards\");\n      let newBoards = [...boardsRef.current];\n      newBoards.splice(rowIndex, 1);\n      setBoards(newBoards);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  const handlePageSizeChange = event => {\n    setPageSize(event.target.value);\n    setPage(1);\n  };\n\n  const columns = useMemo(() => [{\n    Header: \"Title\",\n    accessor: \"title\"\n  }, {\n    Header: \"Description\",\n    accessor: \"description\"\n  }, {\n    Header: \"Status\",\n    accessor: \"published\",\n    Cell: props => {\n      return props.value ? \"Published\" : \"Pending\";\n    }\n  }, {\n    Header: \"Actions\",\n    accessor: \"actions\",\n    Cell: props => {\n      const rowIdx = props.row.id;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => openBoards(rowIdx),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-edit action mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => deleteBoards(rowIdx),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this);\n    }\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data: boards\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Search by title\",\n          value: searchTitle,\n          onChange: onChangeSearchTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: findByTitle,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [\"Items per Page: \", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handlePageSizeChange,\n          value: pageSize,\n          children: pageSizes.map(size => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: size,\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          className: \"my-3\",\n          count: count,\n          page: page,\n          siblingCount: 1,\n          boundaryCount: 1,\n          variant: \"outlined\",\n          shape: \"rounded\",\n          onChange: handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-bordered\",\n        ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n              children: column.render(\"Header\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: rows.map((row, i) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: cell.render(\"Cell\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BoardsList, \"CMSetH9CnqKKfbKgFhbjDeVictw=\", false, function () {\n  return [useTable];\n});\n\n_c = BoardsList;\nexport default BoardsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardsList\");","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/BoardsList.js"],"names":["React","useState","useEffect","useMemo","useRef","Pagination","BoardsDataService","useTable","BoardsList","props","boards","setBoards","searchTitle","setSearchTitle","boardsRef","page","setPage","count","setCount","pageSize","setPageSize","pageSizes","current","onChangeSearchTitle","e","target","value","getRequestParams","params","retrieveBoards","getAllBoards","then","response","totalPages","data","console","log","catch","refreshList","removeAllBoards","deleteAllBoards","findByTitle","openBoards","rowIndex","id","history","push","deleteBoards","newBoards","splice","handlePageChange","event","handlePageSizeChange","columns","Header","accessor","Cell","rowIdx","row","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","size","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport BoardsDataService from \"../services/BoardsService\";\nimport useTable from 'react-table';\n\nconst BoardsList = (props) => {\n  const [boards, setBoards] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const boardsRef = useRef();\n\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(0);\n  const [pageSize, setPageSize] = useState(3);\n\n  const pageSizes = [3, 6, 9];\n\n  boardsRef.current = boards;\n\n  const onChangeSearchTitle = (e) => {\n    const searchTitle = e.target.value;\n    setSearchTitle(searchTitle);\n  };\n\n  const getRequestParams = (searchTitle, page, pageSize) => {\n    let params = {};\n\n    if (searchTitle) {\n      params[\"title\"] = searchTitle;\n    }\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (pageSize) {\n      params[\"size\"] = pageSize;\n    }\n\n    return params;\n  };\n\n  const retrieveBoards = () => {\n    const params = getRequestParams(searchTitle, page, pageSize);\n\n    BoardsDataService.getAllBoards(params)\n      .then((response) => {\n        const { boards, totalPages } = response.data;\n\n        setBoards(boards);\n        setCount(totalPages);\n\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(retrieveBoards, [page, pageSize]);\n\n  const refreshList = () => {\n    retrieveBoards();\n  };\n\n  const removeAllBoards = () => {\n    BoardsDataService.deleteAllBoards()\n      .then((response) => {\n        console.log(response.data);\n        refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const findByTitle = () => {\n    setPage(1);\n    retrieveBoards();\n  };\n\n  const openBoards = (rowIndex) => {\n    const id = boardsRef.current[rowIndex].id;\n\n    props.history.push(\"/boards/\" + id);\n  };\n\n  const deleteBoards = (rowIndex) => {\n    const id = boardsRef.current[rowIndex].id;\n\n    BoardsDataService.deleteBoards(id)\n      .then((response) => {\n        props.history.push(\"/boards\");\n\n        let newBoards = [...boardsRef.current];\n        newBoards.splice(rowIndex, 1);\n\n        setBoards(newBoards);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  const handlePageSizeChange = (event) => {\n    setPageSize(event.target.value);\n    setPage(1);\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Title\",\n        accessor: \"title\",\n      },\n      {\n        Header: \"Description\",\n        accessor: \"description\",\n      },\n      {\n        Header: \"Status\",\n        accessor: \"published\",\n        Cell: (props) => {\n          return props.value ? \"Published\" : \"Pending\";\n        },\n      },\n      {\n        Header: \"Actions\",\n        accessor: \"actions\",\n        Cell: (props) => {\n          const rowIdx = props.row.id;\n          return (\n            <div>\n              <span onClick={() => openBoards(rowIdx)}>\n                <i className=\"far fa-edit action mr-2\"></i>\n              </span>\n\n              <span onClick={() => deleteBoards(rowIdx)}>\n                <i className=\"fas fa-trash action\"></i>\n              </span>\n            </div>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data: boards,\n  });\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by title\"\n            value={searchTitle}\n            onChange={onChangeSearchTitle}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByTitle}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"col-md-12 list\">\n        <div className=\"mt-3\">\n          {\"Items per Page: \"}\n          <select onChange={handlePageSizeChange} value={pageSize}>\n            {pageSizes.map((size) => (\n              <option key={size} value={size}>\n                {size}\n              </option>\n            ))}\n          </select>\n\n          <Pagination\n            className=\"my-3\"\n            count={count}\n            page={page}\n            siblingCount={1}\n            boundaryCount={1}\n            variant=\"outlined\"\n            shape=\"rounded\"\n            onChange={handlePageChange}\n          />\n        </div>\n\n        <table\n          className=\"table table-striped table-bordered\"\n          {...getTableProps()}\n        >\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps()}>\n                    {column.render(\"Header\")}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"col-md-8\">\n        {/*<button className=\"btn btn-sm btn-danger\" onClick={removeAllBoards}>*/}\n        {/*  Remove All*/}\n        {/*</button>*/}\n      </div>\n    </div>\n  );\n};\n\nexport default BoardsList;\n"]},"metadata":{},"sourceType":"module"}