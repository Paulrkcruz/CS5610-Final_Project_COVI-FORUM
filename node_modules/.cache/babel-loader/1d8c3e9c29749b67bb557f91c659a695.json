{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/new-thread/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./new-thread.css\";\nimport { addThread } from \"../thread\";\nimport { withRouter, Redirect } from \"react-router-dom\"; // import TagsInput from \"react-tagsinput\";\n// Create a new Board Thread\n// Posts\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewThread = props => {\n  _s();\n\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [error, setError] = useState(undefined);\n  const [threadId, setThreadId] = useState(undefined);\n  const [redirect, setRedirect] = useState(false);\n\n  const handleClick = () => {\n    if (subject === \"\" || message === \"\") {\n      setError(\"All fields must be filled to continue..\");\n      return;\n    }\n\n    var payload = {\n      subject: subject,\n      message: message,\n      tags: JSON.stringify(tags)\n    };\n    addThread(payload).then(response => {\n      if (response.status === 200) {\n        setThreadId(response.data.id);\n        setRedirect(true);\n      } else if (response.status === 202) {\n        setError(response.data);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  if (redirect === true) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/thread/\" + threadId,\n        state: {\n          threadId: threadId\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-thread\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add a thread\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"subject\",\n        children: \"Subject: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"subject\",\n        alt: \"subject\",\n        name: \"subject\",\n        placeholder: \"Enter Thread Board Topic\",\n        type: \"text\",\n        onChange: event => setSubject(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"message\",\n        children: \"Message: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"message\",\n        alt: \"message\",\n        name: \"message\",\n        onChange: event => setMessage(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tags\",\n        children: \"Tags: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      \"aria-label\": \"Create a New Thread Board\",\n      onClick: handleClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ERROR\",\n      children: error ? error : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewThread, \"wAyVM9TJKgTJrhQkUXPuhn+ejMk=\");\n\n_c = NewThread;\nexport default _c2 = withRouter(NewThread);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewThread\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/new-thread/index.js"],"names":["React","useState","addThread","withRouter","Redirect","NewThread","props","subject","setSubject","message","setMessage","tags","setTags","error","setError","undefined","threadId","setThreadId","redirect","setRedirect","handleClick","payload","JSON","stringify","then","response","status","data","id","catch","console","pathname","state","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./new-thread.css\";\nimport { addThread } from \"../thread\";\nimport { withRouter, Redirect } from \"react-router-dom\";\n// import TagsInput from \"react-tagsinput\";\n// Create a new Board Thread\n// Posts\nconst NewThread = (props) => {\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [error, setError] = useState(undefined);\n  const [threadId, setThreadId] = useState(undefined);\n  const [redirect, setRedirect] = useState(false);\n\n  const handleClick = () => {\n    if (subject === \"\" || message === \"\") {\n      setError(\"All fields must be filled to continue..\");\n      return;\n    }\n\n    var payload = {\n      subject: subject,\n      message: message,\n      tags: JSON.stringify(tags),\n    };\n\n    addThread(payload)\n      .then((response) => {\n        if (response.status === 200) {\n          setThreadId(response.data.id);\n          setRedirect(true);\n        } else if (response.status === 202) {\n          setError(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  if (redirect === true) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/thread/\" + threadId,\n          state: { threadId: threadId },\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"new-thread\">\n      <h1>Add a thread</h1>\n\n      <div>\n        <label htmlFor=\"subject\">Subject: </label>\n        <input\n    id=\"subject\"\n    alt=\"subject\"\n    name=\"subject\"\n    placeholder=\"Enter Thread Board Topic\"\n    type=\"text\"\n    onChange={(event) => setSubject(event.target.value)}\n    />\n      </div>\n\n      <div>\n        <label htmlFor=\"message\">Message: </label>\n        <textarea\n    id=\"message\"\n    alt=\"message\"\n    name=\"message\"\n    onChange={(event) => setMessage(event.target.value)}\n    />\n      </div>\n      <div>\n        <label htmlFor=\"tags\">Tags: </label>\n        {/*<TagsInput*/}\n        {/*  inputProps={{*/}\n        {/*    \"aria-label\": \"Add Tags\",*/}\n        {/*  }}*/}\n        {/*  id=\"tags\"*/}\n        {/*  value={tags}*/}\n        {/*  onChange={setTags}*/}\n        {/*/>*/}\n      </div>\n\n      <button aria-label=\"Create a New Thread Board\" onClick={handleClick}>\n        Submit\n      </button>\n\n      <div className=\"ERROR\">{error ? error : \"\"}</div>\n    </div>\n  );\n};\n\nexport default withRouter(NewThread);\n"]},"metadata":{},"sourceType":"module"}