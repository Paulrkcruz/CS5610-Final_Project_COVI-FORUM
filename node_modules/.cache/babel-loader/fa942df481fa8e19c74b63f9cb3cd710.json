{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/Boards.js\";\nimport React, { useState, useEffect } from \"react\";\nimport BoardsDataService from \"../services/BoardsService\";\nimport \"./common.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Boards = props => {\n  const initialBoardsState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [currentBoards, setCurrentBoards] = useState(initialBoardsState);\n  const [message, setMessage] = useState(\"\");\n\n  const getBoards = id => {\n    BoardsDataService.get(id).then(response => {\n      setCurrentBoards(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getBoards(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCurrentBoards({ ...currentBoards,\n      [name]: value\n    });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      id: currentBoards.id,\n      title: currentBoards.title,\n      description: currentBoards.description,\n      published: status\n    };\n    BoardsDataService.update(currentBoards.id, data).then(response => {\n      setCurrentBoards({ ...currentBoards,\n        published: status\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const updateBoards = () => {\n    BoardsDataService.update(currentBoards.id, currentBoards).then(response => {\n      console.log(response.data);\n      setMessage(\"The boards was updated successfully!\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const deleteBoards = () => {\n    BoardsDataService.remove(currentBoards.id).then(response => {\n      console.log(response.data);\n      props.history.push(\"/boards\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, currentBoards ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Boards\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"title\",\n    name: \"title\",\n    value: currentBoards.title,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"description\",\n    name: \"description\",\n    value: currentBoards.description,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Status:\")), currentBoards.published ? \"Published\" : \"Pending\")), currentBoards.published ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"badge badge-primary mr-2\",\n    onClick: () => updatePublished(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"UnPublish\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"badge badge-primary mr-2\",\n    onClick: () => updatePublished(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Publish\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"badge badge-danger mr-2\",\n    onClick: deleteBoards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"badge badge-success\",\n    onClick: updateBoards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, message)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Please click on a Boards...\")));\n};\n\nexport default Boards;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/Boards.js"],"names":["React","useState","useEffect","BoardsDataService","Boards","props","initialBoardsState","id","title","description","published","currentBoards","setCurrentBoards","message","setMessage","getBoards","get","then","response","data","console","log","catch","e","match","params","handleInputChange","event","name","value","target","updatePublished","status","update","updateBoards","deleteBoards","remove","history","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BoardsDataService from \"../services/BoardsService\";\nimport \"./common.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Boards = props => {\n  const initialBoardsState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [currentBoards, setCurrentBoards] = useState(initialBoardsState);\n  const [message, setMessage] = useState(\"\");\n\n  const getBoards = id => {\n    BoardsDataService.get(id)\n      .then(response => {\n        setCurrentBoards(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getBoards(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentBoards({ ...currentBoards, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      id: currentBoards.id,\n      title: currentBoards.title,\n      description: currentBoards.description,\n      published: status\n    };\n\n    BoardsDataService.update(currentBoards.id, data)\n      .then(response => {\n        setCurrentBoards({ ...currentBoards, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateBoards = () => {\n    BoardsDataService.update(currentBoards.id, currentBoards)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The boards was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const deleteBoards = () => {\n    BoardsDataService.remove(currentBoards.id)\n      .then(response => {\n        console.log(response.data);\n        props.history.push(\"/boards\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div>\n      {currentBoards ? (\n        <div className=\"edit-form\">\n          <h4>Boards</h4>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                name=\"title\"\n                value={currentBoards.title}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                name=\"description\"\n                value={currentBoards.description}\n                onChange={handleInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>\n                <strong>Status:</strong>\n              </label>\n              {currentBoards.published ? \"Published\" : \"Pending\"}\n            </div>\n          </form>\n\n          {currentBoards.published ? (\n            <button\n              className=\"badge badge-primary mr-2\"\n              onClick={() => updatePublished(false)}\n            >\n              UnPublish\n            </button>\n          ) : (\n            <button\n              className=\"badge badge-primary mr-2\"\n              onClick={() => updatePublished(true)}\n            >\n              Publish\n            </button>\n          )}\n\n          <button className=\"badge badge-danger mr-2\" onClick={deleteBoards}>\n            Delete\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateBoards}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Boards...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Boards;\n"]},"metadata":{},"sourceType":"module"}