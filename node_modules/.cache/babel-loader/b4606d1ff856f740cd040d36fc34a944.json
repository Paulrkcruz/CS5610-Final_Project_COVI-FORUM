{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/BoardsList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport BoardsDataService from \"../services/BoardsService\";\nimport { Link } from \"react-router-dom\";\n\nconst BoardsList = () => {\n  const [boards, setBoards] = useState([]);\n  const [currentBoards, setCurrentBoards] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  useEffect(() => {\n    findAllBoards();\n  }, []);\n\n  const onChangeSearchTitle = e => {\n    const searchTitle = e.target.value;\n    setSearchTitle(searchTitle);\n  };\n\n  const findAllBoards = () => {\n    BoardsDataService.findAllBoards().then(response => {\n      setBoards(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const refreshList = () => {\n    findAllBoards();\n    setCurrentBoards(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveBoards = (boards, index) => {\n    setCurrentBoards(boards);\n    setCurrentIndex(index);\n  };\n\n  const deleteAllBoards = () => {\n    BoardsDataService.deleteAllBoards().then(response => {\n      console.log(response.data);\n      refreshList();\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const findBoardsByTitle = () => {\n    BoardsDataService.findByTitle(searchTitle).then(response => {\n      setBoards(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Search by title\",\n    value: searchTitle,\n    onChange: onChangeSearchTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    type: \"button\",\n    onClick: findBoardsByTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Search\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Most Popular Boards\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, boards && boards.map((boards, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item \" + (index === currentIndex ? \"active\" : \"\"),\n    onClick: () => setActiveBoards(boards, index),\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, boards.title)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, currentBoards ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"Boards\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, \"Title:\")), \" \", currentBoards.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, \"Description:\")), \" \", currentBoards.description), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, \"Status:\")), \" \", currentBoards.published ? \"Published\" : \"Pending\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/boards/\" + currentBoards.id,\n    className: \"badge badge-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, \"Edit\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }))));\n};\n\nexport default BoardsList;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/BoardsList.js"],"names":["React","useState","useEffect","BoardsDataService","Link","BoardsList","boards","setBoards","currentBoards","setCurrentBoards","currentIndex","setCurrentIndex","searchTitle","setSearchTitle","findAllBoards","onChangeSearchTitle","e","target","value","then","response","data","console","log","catch","refreshList","setActiveBoards","index","deleteAllBoards","findBoardsByTitle","findByTitle","map","title","description","published","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BoardsDataService from \"../services/BoardsService\";\nimport { Link } from \"react-router-dom\";\n\nconst BoardsList = () => {\n    const [boards, setBoards] = useState([]);\n    const [currentBoards, setCurrentBoards] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n    const [searchTitle, setSearchTitle] = useState(\"\");\n\n    useEffect(() => {\n        findAllBoards();\n    }, []);\n\n    const onChangeSearchTitle = e => {\n        const searchTitle = e.target.value;\n        setSearchTitle(searchTitle);\n    };\n\n    const findAllBoards = () => {\n        BoardsDataService.findAllBoards()\n            .then(response => {\n                setBoards(response.data);\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const refreshList = () => {\n        findAllBoards();\n        setCurrentBoards(null);\n        setCurrentIndex(-1);\n    };\n\n    const setActiveBoards = (boards, index) => {\n        setCurrentBoards(boards);\n        setCurrentIndex(index);\n    };\n\n    const deleteAllBoards = () => {\n        BoardsDataService.deleteAllBoards()\n            .then(response => {\n                console.log(response.data);\n                refreshList();\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const findBoardsByTitle = () => {\n        BoardsDataService.findByTitle(searchTitle)\n            .then(response => {\n                setBoards(response.data);\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    return (\n        <div className=\"list row\">\n            <div className=\"col-md-8\">\n                <div className=\"input-group mb-3\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Search by title\"\n                        value={searchTitle}\n                        onChange={onChangeSearchTitle}\n                    />\n                    <div className=\"input-group-append\">\n                        <button\n                            className=\"btn btn-outline-secondary\"\n                            type=\"button\"\n                            onClick={findBoardsByTitle}\n                        >\n                            Search\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"list row\">\n                <h4>Most Popular Boards</h4>\n\n                <ul className=\"list-group\">\n                    {boards &&\n                    boards.map((boards, index) => (\n                        <li\n                            className={\n                                \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                            }\n                            onClick={() => setActiveBoards(boards, index)}\n                            key={index}\n                        >\n                            {boards.title}\n                        </li>\n                    ))}\n                </ul>\n\n                {/*<button*/}\n                {/*    className=\"m-3 btn btn-sm btn-danger\"*/}\n                {/*    onClick={deleteAllBoards}*/}\n                {/*>*/}\n                {/*    Remove All*/}\n                {/*</button>*/}\n            </div>\n            <div className=\"col-md-6\">\n                {currentBoards ? (\n                    <div>\n                        <h4>Boards</h4>\n                        <div>\n                            <label>\n                                <strong>Title:</strong>\n                            </label>{\" \"}\n                            {currentBoards.title}\n                        </div>\n                        <div>\n                            <label>\n                                <strong>Description:</strong>\n                            </label>{\" \"}\n                            {currentBoards.description}\n                        </div>\n                        <div>\n                            <label>\n                                <strong>Status:</strong>\n                            </label>{\" \"}\n                            {currentBoards.published ? \"Published\" : \"Pending\"}\n                        </div>\n\n                        <Link\n                            to={\"/boards/\" + currentBoards.id}\n                            className=\"badge badge-warning\"\n                        >\n                            Edit\n                        </Link>\n                    </div>\n                ) : (\n                    <div>\n                        <br />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default BoardsList;"]},"metadata":{},"sourceType":"module"}