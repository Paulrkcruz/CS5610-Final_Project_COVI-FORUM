{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/Boards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport BoardsDataService from \"../services/BoardsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Boards = props => {\n  _s();\n\n  const initialBoardsState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [currentBoards, setCurrentBoards] = useState(initialBoardsState);\n  const [message, setMessage] = useState(\"\");\n\n  const getBoards = id => {\n    BoardsDataService.getBoards(id).then(response => {\n      setCurrentBoards(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getBoards(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCurrentBoards({ ...currentBoards,\n      [name]: value\n    });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      id: currentBoards.id,\n      title: currentBoards.title,\n      description: currentBoards.description,\n      published: status\n    };\n    BoardsDataService.updateBoards(currentBoards.id, data).then(response => {\n      setCurrentBoards({ ...currentBoards,\n        published: status\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const updateBoards = () => {\n    BoardsDataService.update(currentBoards.id, currentBoards).then(response => {\n      console.log(response.data);\n      setMessage(\"The boards was updated successfully!\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const deleteBoards = () => {\n    BoardsDataService.remove(currentBoards.id).then(response => {\n      console.log(response.data);\n      props.history.push(\"/boards\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentBoards ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Boards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"title\",\n            name: \"title\",\n            value: currentBoards.title,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"description\",\n            name: \"description\",\n            value: currentBoards.description,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), currentBoards.published ? \"Published\" : \"Pending\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), currentBoards.published ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"badge badge-primary mr-2\",\n        onClick: () => updatePublished(false),\n        children: \"UnPublish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"badge badge-primary mr-2\",\n        onClick: () => updatePublished(true),\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"badge badge-danger mr-2\",\n        onClick: deleteBoards,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"badge badge-success\",\n        onClick: updateBoards,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Boards, \"iMFVUK69jwfLXSKV0bJx+cygR0c=\");\n\n_c = Boards;\nexport default Boards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Boards\");","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/Boards.js"],"names":["React","useState","useEffect","BoardsDataService","Boards","props","initialBoardsState","id","title","description","published","currentBoards","setCurrentBoards","message","setMessage","getBoards","then","response","data","console","log","catch","e","match","params","handleInputChange","event","name","value","target","updatePublished","status","updateBoards","update","deleteBoards","remove","history","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BoardsDataService from \"../services/BoardsService\";\n\nconst Boards = props => {\n  const initialBoardsState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    published: false\n  };\n  const [currentBoards, setCurrentBoards] = useState(initialBoardsState);\n  const [message, setMessage] = useState(\"\");\n\n  const getBoards = id => {\n    BoardsDataService.getBoards(id)\n      .then(response => {\n        setCurrentBoards(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getBoards(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentBoards({ ...currentBoards, [name]: value });\n  };\n\n  const updatePublished = status => {\n    var data = {\n      id: currentBoards.id,\n      title: currentBoards.title,\n      description: currentBoards.description,\n      published: status\n    };\n\n    BoardsDataService.updateBoards(currentBoards.id, data)\n      .then(response => {\n        setCurrentBoards({ ...currentBoards, published: status });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateBoards = () => {\n    BoardsDataService.update(currentBoards.id, currentBoards)\n      .then(response => {\n        console.log(response.data);\n        setMessage(\"The boards was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const deleteBoards = () => {\n    BoardsDataService.remove(currentBoards.id)\n      .then(response => {\n        console.log(response.data);\n        props.history.push(\"/boards\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div>\n      {currentBoards ? (\n        <div className=\"edit-form\">\n          <h4>Boards</h4>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                name=\"title\"\n                value={currentBoards.title}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                name=\"description\"\n                value={currentBoards.description}\n                onChange={handleInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>\n                <strong>Status:</strong>\n              </label>\n              {currentBoards.published ? \"Published\" : \"Pending\"}\n            </div>\n          </form>\n\n          {currentBoards.published ? (\n            <button\n              className=\"badge badge-primary mr-2\"\n              onClick={() => updatePublished(false)}\n            >\n              UnPublish\n            </button>\n          ) : (\n            <button\n              className=\"badge badge-primary mr-2\"\n              onClick={() => updatePublished(true)}\n            >\n              Publish\n            </button>\n          )}\n\n          <button className=\"badge badge-danger mr-2\" onClick={deleteBoards}>\n            Delete\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateBoards}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p></p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Boards;\n"]},"metadata":{},"sourceType":"module"}