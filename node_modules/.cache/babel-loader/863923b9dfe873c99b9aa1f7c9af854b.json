{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/thread/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./thread.css\";\nimport { Link } from \"react-router-dom\";\nimport { convertDateToFromNow } from \"../../actions/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Thread = props => {\n  _s();\n\n  const [date, setDate] = useState(\"\");\n\n  const initialSetup = () => {\n    setDate(convertDateToFromNow(props.thread.created));\n  };\n\n  useEffect(initialSetup, []);\n\n  const htmlContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subject\",\n        children: props.titleOfPage ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.thread.subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.thread.subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: [\"Created by \", props.thread.user.name, \" \", date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags\",\n        children: [\"Tags:\", \" \", props.thread.tags && props.thread.tags.length && Array.isArray(props.thread.tags) ? props.thread.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments vertical-centering\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.thread.count - 1, \" comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n\n  if (props.clickable) {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      className: \"thread\",\n      to: {\n        pathname: \"/thread/\" + props.thread.id,\n        state: {\n          threadId: props.thread.id\n        }\n      },\n      children: htmlContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread\",\n      children: htmlContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Thread, \"b1Zb5C0n2TNX0+cawpWtILgzQ/c=\");\n\n_c = Thread;\nexport default Thread;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/thread/index.js"],"names":["React","useEffect","useState","Link","convertDateToFromNow","Thread","props","date","setDate","initialSetup","thread","created","htmlContent","titleOfPage","subject","user","name","tags","length","Array","isArray","map","tag","index","count","clickable","pathname","id","state","threadId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,oBAAT,QAAqC,sBAArC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMO,YAAY,GAAG,MAAM;AACzBD,IAAAA,OAAO,CAACJ,oBAAoB,CAACE,KAAK,CAACI,MAAN,CAAaC,OAAd,CAArB,CAAP;AACD,GAFD;;AAIAV,EAAAA,SAAS,CAACQ,YAAD,EAAe,EAAf,CAAT;;AAEA,QAAMG,WAAW,gBACf;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGN,KAAK,CAACO,WAAN,gBACC;AAAA,oBAAKP,KAAK,CAACI,MAAN,CAAaI;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAA,oBAAKR,KAAK,CAACI,MAAN,CAAaI;AAAlB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kCACcR,KAAK,CAACI,MAAN,CAAaK,IAAb,CAAkBC,IADhC,OACuCT,IADvC;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAWE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,4BACQ,GADR,EAEGD,KAAK,CAACI,MAAN,CAAaO,IAAb,IACDX,KAAK,CAACI,MAAN,CAAaO,IAAb,CAAkBC,MADjB,IAEDC,KAAK,CAACC,OAAN,CAAcd,KAAK,CAACI,MAAN,CAAaO,IAA3B,CAFC,GAGGX,KAAK,CAACI,MAAN,CAAaO,IAAb,CAAkBI,GAAlB,CAAsB,CAACC,GAAD,EAAMC,KAAN,kBACpB;AAAA,oBAAmBD;AAAnB,WAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,gBADF,CAHH,GAMG,EARN;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,6BACE;AAAA,mBAAIjB,KAAK,CAACI,MAAN,CAAac,KAAb,GAAqB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AA8BA,MAAIlB,KAAK,CAACmB,SAAV,EAAqB;AACnB,wBACE,QAAC,IAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAE,aAAapB,KAAK,CAACI,MAAN,CAAaiB,EADlC;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAEvB,KAAK,CAACI,MAAN,CAAaiB;AAAzB;AAFL,OAFN;AAAA,gBAOGf;AAPH;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAZD,MAYO;AACL,wBAAO;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAtDD;;GAAMP,M;;KAAAA,M;AAwDN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./thread.css\";\nimport { Link } from \"react-router-dom\";\nimport { convertDateToFromNow } from \"../../actions/helper\";\n\nconst Thread = (props) => {\n  const [date, setDate] = useState(\"\");\n\n  const initialSetup = () => {\n    setDate(convertDateToFromNow(props.thread.created));\n  };\n\n  useEffect(initialSetup, []);\n\n  const htmlContent = (\n    <div className=\"container\">\n      <div className=\"content\">\n        <div className=\"subject\">\n          {props.titleOfPage ? (\n            <h1>{props.thread.subject}</h1>\n          ) : (\n            <h2>{props.thread.subject}</h2>\n          )}\n        </div>\n        <div className=\"date\">\n          Created by {props.thread.user.name} {date}\n        </div>\n        <div className=\"tags\">\n          Tags:{\" \"}\n          {props.thread.tags &&\n          props.thread.tags.length &&\n          Array.isArray(props.thread.tags)\n            ? props.thread.tags.map((tag, index) => (\n                <span key={index}>{tag}</span>\n              ))\n            : \"\"}\n        </div>\n      </div>\n      <div className=\"comments vertical-centering\">\n        <p>{props.thread.count - 1} comments</p>\n      </div>\n    </div>\n  );\n\n  if (props.clickable) {\n    return (\n      <Link\n        className=\"thread\"\n        to={{\n          pathname: \"/thread/\" + props.thread.id,\n          state: { threadId: props.thread.id },\n        }}\n      >\n        {htmlContent}\n      </Link>\n    );\n  } else {\n    return <div className=\"thread\">{htmlContent}</div>;\n  }\n};\n\nexport default Thread;\n"]},"metadata":{},"sourceType":"module"}