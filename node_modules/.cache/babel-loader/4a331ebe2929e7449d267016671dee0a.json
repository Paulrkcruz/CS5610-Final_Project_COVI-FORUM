{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/sign-up/register.js\";\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport isEmail from 'validator/lib/isEmail';\nimport validateAll from \"react-validation\";\nimport AuthService from \"../../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, \"This field is required!\");\n  }\n};\n\nconst validEmail = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"This is not a valid email.\");\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"The username must be between 3 and 20 characters.\");\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"The password must be between 6 and 40 characters.\");\n  }\n};\n\nconst Register = props => {\n  const form = useRef();\n  const checkBtn = useRef();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = e => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangeEmail = e => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setSuccessful(false);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(username, email, password).then(response => {\n        setMessage(response.data.message);\n        setSuccessful(true);\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setMessage(resMessage);\n        setSuccessful(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n    alt: \"profile-img\",\n    className: \"profile-img-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleRegister,\n    ref: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, !successful && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"username\",\n    value: username,\n    onChange: onChangeUsername,\n    validations: [required, vusername],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"email\",\n    value: email,\n    onChange: onChangeEmail,\n    validations: [required, validEmail],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    className: \"form-control\",\n    name: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    validations: [required, vpassword],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, \"Sign Up\"))), message && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, message)), /*#__PURE__*/React.createElement(CheckButton, {\n    style: {\n      display: \"none\"\n    },\n    ref: checkBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/sign-up/register.js"],"names":["React","useState","useRef","Form","Input","CheckButton","isEmail","validateAll","AuthService","required","value","validEmail","vusername","length","vpassword","Register","props","form","checkBtn","username","setUsername","email","setEmail","password","setPassword","successful","setSuccessful","message","setMessage","onChangeUsername","e","target","onChangeEmail","onChangePassword","handleRegister","preventDefault","current","context","_errors","register","then","response","data","error","resMessage","toString","display"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport isEmail from 'validator/lib/isEmail';\nimport validateAll from \"react-validation\";\nimport AuthService from \"../../services/auth.service\";\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nconst validEmail = (value) => {\n    if (!isEmail(value)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid email.\n            </div>\n        );\n    }\n};\n\nconst vusername = (value) => {\n    if (value.length < 3 || value.length > 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The username must be between 3 and 20 characters.\n            </div>\n        );\n    }\n};\n\nconst vpassword = (value) => {\n    if (value.length < 6 || value.length > 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The password must be between 6 and 40 characters.\n            </div>\n        );\n    }\n};\n\nconst Register = (props) => {\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [successful, setSuccessful] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const onChangeUsername = (e) => {\n        const username = e.target.value;\n        setUsername(username);\n    };\n\n    const onChangeEmail = (e) => {\n        const email = e.target.value;\n        setEmail(email);\n    };\n\n    const onChangePassword = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        setMessage(\"\");\n        setSuccessful(false);\n\n        form.current.validateAll();\n\n        if (checkBtn.current.context._errors.length === 0) {\n            AuthService.register(username, email, password).then(\n                (response) => {\n                    setMessage(response.data.message);\n                    setSuccessful(true);\n                },\n                (error) => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    setMessage(resMessage);\n                    setSuccessful(false);\n                }\n            );\n        }\n    };\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n\n                <Form onSubmit={handleRegister} ref={form}>\n                    {!successful && (\n                        <div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"username\"\n                                    value={username}\n                                    onChange={onChangeUsername}\n                                    validations={[required, vusername]}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={onChangeEmail}\n                                    validations={[required, validEmail]}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <Input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={onChangePassword}\n                                    validations={[required, vpassword]}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                            </div>\n                        </div>\n                    )}\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div\n                                className={\n                                    successful ? \"alert alert-success\" : \"alert alert-danger\"\n                                }\n                                role=\"alert\"\n                            >\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}