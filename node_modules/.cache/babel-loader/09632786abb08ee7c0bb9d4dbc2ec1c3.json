{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/user.js\";\nimport axios from \"axios\";\nimport env from \"../actions/env\";\nimport React, { Component } from \"react\";\nimport UserService from \"../services/user.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const signInUser = payload => {\n  return axios.post(env[process.env.NODE_ENV].api + \"/accounts/signin\", payload);\n};\nexport const signUpUser = payload => {\n  return axios.post(env[process.env.NODE_ENV].api + \"/accounts/register\", payload);\n};\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(response => {\n      this.setState({\n        content: response.data\n      });\n    }, error => {\n      this.setState({\n        content: error.response && error.response.data && error.response.data.message || error.message || error.toString()\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"jumbotron\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/user.js"],"names":["axios","env","React","Component","UserService","signInUser","payload","post","process","NODE_ENV","api","signUpUser","BoardUser","constructor","props","state","content","componentDidMount","getUserBoard","then","response","setState","data","error","message","toString","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAKA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAON,KAAK,CAACO,IAAN,CACHN,GAAG,CAACO,OAAO,CAACP,GAAR,CAAYQ,QAAb,CAAH,CAA0BC,GAA1B,GAAgC,kBAD7B,EAEHJ,OAFG,CAAP;AAID,CALM;AAOP,OAAO,MAAMK,UAAU,GAAIL,OAAD,IAAa;AACrC,SAAON,KAAK,CAACO,IAAN,CACHN,GAAG,CAACO,OAAO,CAACP,GAAR,CAAYQ,QAAb,CAAH,CAA0BC,GAA1B,GAAgC,oBAD7B,EAEHJ,OAFG,CAAP;AAID,CALM;AAOP,eAAe,MAAMM,SAAN,SAAwBT,SAAxB,CAAkC;AAG/CU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,WAAW,CAACc,YAAZ,GAA2BC,IAA3B,CACIC,QAAQ,IAAI;AACV,WAAKC,QAAL,CAAc;AACZL,QAAAA,OAAO,EAAEI,QAAQ,CAACE;AADN,OAAd;AAGD,KALL,EAMIC,KAAK,IAAI;AACP,WAAKF,QAAL,CAAc;AACZL,QAAAA,OAAO,EACFO,KAAK,CAACH,QAAN,IACGG,KAAK,CAACH,QAAN,CAAeE,IADlB,IAEGC,KAAK,CAACH,QAAN,CAAeE,IAAf,CAAoBE,OAFxB,IAGAD,KAAK,CAACC,OAHN,IAIAD,KAAK,CAACE,QAAN;AANQ,OAAd;AAQD,KAfL;AAiBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA,+BACE;AAAA,oBAAK,KAAKX,KAAL,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAOD;;AAvC8C","sourcesContent":["import axios from \"axios\";\nimport env from \"../actions/env\";\nimport React, { Component } from \"react\";\nimport UserService from \"../services/user.service\";\n\n\n\n\nexport const signInUser = (payload) => {\n  return axios.post(\n      env[process.env.NODE_ENV].api + \"/accounts/signin\",\n      payload\n  );\n};\n\nexport const signUpUser = (payload) => {\n  return axios.post(\n      env[process.env.NODE_ENV].api + \"/accounts/register\",\n      payload\n  );\n};\n\nexport default class BoardUser extends Component {\n\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n        response => {\n          this.setState({\n            content: response.data\n          });\n        },\n        error => {\n          this.setState({\n            content:\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString()\n          });\n        }\n    );\n  }\n\n  render() {\n    return (\n        <div className=\"container\">\n          <header className=\"jumbotron\">\n            <h3>{this.state.content}</h3>\n          </header>\n        </div>\n    );\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}