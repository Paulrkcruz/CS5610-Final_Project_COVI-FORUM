{"ast":null,"code":"var _jsxFileName = \"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/home-screen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getAllThreads, searchAllThreads } from \"./thread\";\nimport ThreadList from \"../components/thread-list\";\nimport PageHead from \"../components/page-head\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../components/search-bar\";\nimport ReactPaginate from \"react-paginate\";\nimport UserService from \"../services/user.service\";\nimport { Component } from \"react/cjs/react.production.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class HomeScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    var _s = $RefreshSig$();\n\n    UserService.getPublicContent().then(response => {\n      this.setState({\n        content: response.data\n      });\n    }, _s(error => {\n      _s();\n\n      this.setState({\n        content: error.response && error.response.data || error.message || error.toString()\n      });\n      const [threads, setThreads] = useState([]);\n      const [searchThreads, setSearchThreads] = useState([]);\n      const [visibleThreads, setVisibleThreads] = useState([]);\n      const [dataAvailable, setDataAvailable] = useState(false);\n      const [searchDone, setSearchDone] = useState(false);\n      const [searchTerm, setSearchTerm] = useState(\"\");\n      const [currentPage, setCurrentPage] = useState(0);\n      const PER_PAGE = 10;\n      const offset = currentPage * PER_PAGE;\n\n      const triggerSearch = () => {\n        if (searchTerm !== \"\") {\n          onSearch(searchTerm);\n        } else {\n          setSearchThreads(threads);\n        }\n      };\n\n      useEffect(() => {\n        if (searchThreads.length > 0) {\n          // search list\n          const currentPageData = searchThreads.slice(offset, offset + PER_PAGE);\n          setVisibleThreads(currentPageData);\n        } else {\n          const currentPageData = threads.slice(offset, offset + PER_PAGE);\n          setVisibleThreads(currentPageData);\n        }\n      }, [threads, searchThreads, offset]);\n\n      function handlePageClick({\n        selected: selectedPage\n      }) {\n        setCurrentPage(selectedPage);\n      }\n\n      useEffect(() => {\n        getAllThreads().then(response => {\n          // Insert users\n          setThreads(response.data);\n          setDataAvailable(true);\n        }).catch(err => {\n          console.error(\"Load error. Please try again.\", err);\n        });\n      }, []);\n\n      const onSearch = term => {\n        setDataAvailable(false);\n        searchAllThreads(term).then(response => {\n          // Insert users\n          setSearchThreads(response.data);\n          setDataAvailable(true);\n          setSearchDone(true);\n        }).catch(err => {\n          console.error(\"Load error. Please try again.\", err);\n        });\n      };\n\n      const resetSearch = () => {\n        setSearchTerm(\"\");\n        setSearchThreads([]);\n        setSearchDone(false);\n      };\n\n      {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-screen\",\n          children: [/*#__PURE__*/_jsxDEV(PageHead, {\n            className: \"title\",\n            title: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: dataAvailable ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ReactPaginate, {\n                previousLabel: \"← Previous\",\n                nextLabel: \"Next →\",\n                pageCount: Math.ceil((searchThreads.length > 0 ? searchThreads.length : threads.length) / PER_PAGE),\n                onPageChange: handlePageClick,\n                containerClassName: \"pagination\",\n                previousLinkClassName: \"pagination__link\",\n                nextLinkClassName: \"pagination__link\",\n                disabledClassName: \"pagination__link--disabled\",\n                activeClassName: \"pagination__link--active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ThreadList, {\n                threads: visibleThreads\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                previousLabel: \"← Previous\",\n                nextLabel: \"Next →\",\n                pageCount: Math.ceil((searchThreads.length > 0 ? searchThreads.length : threads.length) / PER_PAGE),\n                onPageChange: handlePageClick,\n                containerClassName: \"pagination\",\n                previousLinkClassName: \"pagination__link\",\n                nextLinkClassName: \"pagination__link\",\n                disabledClassName: \"pagination__link--disabled\",\n                activeClassName: \"pagination__link--active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this) // eslint-disable-next-line react/jsx-no-undef\n            :\n            /*#__PURE__*/\n            _jsxDEV(Loader, {\n              type: \"Puff\",\n              color: \"#4f5d75\",\n              height: 100,\n              width: 100,\n              className: \"loader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"aside\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/thread/new_thread\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"create-new-thread\",\n                children: \"Create new thread\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n              value: searchTerm,\n              search: triggerSearch,\n              onSearch: setSearchTerm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), searchDone ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetSearch,\n              className: \"search-info\",\n              children: searchThreads.length > 0 ? \"Reset search\" : \"No threads found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this);\n      }\n    }, \"0eevAbaKln6FUHRum2z60FC6Mc0=\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/home-screen.js"],"names":["React","useEffect","useState","getAllThreads","searchAllThreads","ThreadList","PageHead","Link","SearchBar","ReactPaginate","UserService","Component","HomeScreen","constructor","props","state","content","componentDidMount","getPublicContent","then","response","setState","data","error","message","toString","threads","setThreads","searchThreads","setSearchThreads","visibleThreads","setVisibleThreads","dataAvailable","setDataAvailable","searchDone","setSearchDone","searchTerm","setSearchTerm","currentPage","setCurrentPage","PER_PAGE","offset","triggerSearch","onSearch","length","currentPageData","slice","handlePageClick","selected","selectedPage","catch","err","console","term","resetSearch","Math","ceil"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getAllThreads, searchAllThreads } from \"./thread\";\nimport ThreadList from \"../components/thread-list\";\nimport PageHead from \"../components/page-head\";\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../components/search-bar\";\nimport ReactPaginate from \"react-paginate\";\nimport UserService from \"../services/user.service\";\nimport {Component} from \"react/cjs/react.production.min\";\n\nexport default class HomeScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n  componentDidMount() {\n    UserService.getPublicContent().then(\n        response => {\n          this.setState({\n            content: response.data\n          });\n        },\n        error => {\n            this.setState({\n                content:\n                    (error.response && error.response.data) ||\n                    error.message ||\n                    error.toString()\n            });\n\n            const [threads, setThreads] = useState([]);\n            const [searchThreads, setSearchThreads] = useState([]);\n            const [visibleThreads, setVisibleThreads] = useState([]);\n            const [dataAvailable, setDataAvailable] = useState(false);\n            const [searchDone, setSearchDone] = useState(false);\n            const [searchTerm, setSearchTerm] = useState(\"\");\n            const [currentPage, setCurrentPage] = useState(0);\n            const PER_PAGE = 10;\n            const offset = currentPage * PER_PAGE;\n            const triggerSearch = () => {\n\n                if (searchTerm !== \"\") {\n                    onSearch(searchTerm);\n                } else {\n                    setSearchThreads(threads);\n                }\n            };\n\n            useEffect(() => {\n                if (searchThreads.length > 0) {\n                    // search list\n                    const currentPageData = searchThreads.slice(offset, offset + PER_PAGE);\n                    setVisibleThreads(currentPageData);\n                } else {\n                    const currentPageData = threads.slice(offset, offset + PER_PAGE);\n                    setVisibleThreads(currentPageData);\n                }\n            }, [threads, searchThreads, offset]);\n\n            function handlePageClick({selected: selectedPage}) {\n                setCurrentPage(selectedPage);\n            }\n\n            useEffect(() => {\n                getAllThreads()\n                    .then((response) => {\n                        // Insert users\n                        setThreads(response.data);\n                        setDataAvailable(true);\n                    })\n                    .catch((err) => {\n                        console.error(\"Load error. Please try again.\", err);\n                    });\n            }, []);\n\n            const onSearch = (term) => {\n                setDataAvailable(false);\n                searchAllThreads(term)\n                    .then((response) => {\n                        // Insert users\n                        setSearchThreads(response.data);\n                        setDataAvailable(true);\n                        setSearchDone(true);\n                    })\n                    .catch((err) => {\n                        console.error(\"Load error. Please try again.\", err);\n                    });\n            };\n\n            const resetSearch = () => {\n                setSearchTerm(\"\");\n                setSearchThreads([]);\n                setSearchDone(false);\n\n            };\n\n\n\n            {\n                return (\n                    <div className=\"home-screen\">\n                        <PageHead className=\"title\" title=\"Home\"/>\n\n                        <div className=\"container\">\n                            {\n                                dataAvailable ? (\n                                    <React.Fragment>\n                                        <ReactPaginate\n                                            previousLabel={\"← Previous\"}\n                                            nextLabel={\"Next →\"}\n                                            pageCount={Math.ceil(\n                                                (searchThreads.length > 0\n                                                    ? searchThreads.length\n                                                    : threads.length) / PER_PAGE\n                                            )}\n                                            onPageChange={handlePageClick}\n                                            containerClassName={\"pagination\"}\n                                            previousLinkClassName={\"pagination__link\"}\n                                            nextLinkClassName={\"pagination__link\"}\n                                            disabledClassName={\"pagination__link--disabled\"}\n                                            activeClassName={\"pagination__link--active\"}\n                                        />\n                                        <ThreadList threads={visibleThreads}/>\n                                        <ReactPaginate\n                                            previousLabel={\"← Previous\"}\n                                            nextLabel={\"Next →\"}\n                                            pageCount={Math.ceil(\n                                                (searchThreads.length > 0\n                                                    ? searchThreads.length\n                                                    : threads.length) / PER_PAGE\n                                            )}\n                                            onPageChange={handlePageClick}\n                                            containerClassName={\"pagination\"}\n                                            previousLinkClassName={\"pagination__link\"}\n                                            nextLinkClassName={\"pagination__link\"}\n                                            disabledClassName={\"pagination__link--disabled\"}\n                                            activeClassName={\"pagination__link--active\"}\n                                        />\n                                    </React.Fragment>\n                                    // eslint-disable-next-line react/jsx-no-undef\n                                ) : (<Loader\n                                        type=\"Puff\"\n                                        color=\"#4f5d75\"\n                                        height={100}\n                                        width={100}\n                                        className=\"loader\"/>\n                                )\n                            }\n                        </div>\n\n                        <div className=\"aside\">\n                            <Link to=\"/thread/new_thread\">\n                                <div className=\"create-new-thread\">Create new thread</div>\n                            </Link>\n                            <SearchBar\n                                value={searchTerm}\n                                search={triggerSearch}\n                                onSearch={setSearchTerm}\n                            />\n                            {searchDone ? (\n                                <button onClick={resetSearch} className=\"search-info\">\n                                    {searchThreads.length > 0 ? \"Reset search\" : \"No threads found\"}\n                                </button>\n                            ) : (\n                                \"\"\n                            )}\n                        </div>\n                    </div>\n                );\n            }\n        });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}