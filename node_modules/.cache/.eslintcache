[{"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/index.js":"1","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/reportWebVitals.js":"2","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/App.js":"3","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/details-screen.js":"4","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/search-screen.js":"5","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/services/movie-service.js":"6","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/useToken.js":"7","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/Login/Login.js":"8","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/Dashboard/Dashboard.js":"9","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/Preferences/Preferences.js":"10","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/user.js":"11","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/actions/env.js":"12","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/services/user.service.js":"13","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/services/cookie.service.js":"14","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/serviceWorker.js":"15","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/authenticated-route/index.js":"16","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/header/index.js":"17","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/footer/index.js":"18","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/home-screen.js":"19","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/thread.js":"20","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/page-head/index.js":"21","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/search-bar/index.js":"22","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/thread-list/index.js":"23","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/thread/index.js":"24","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/actions/helper.js":"25","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/not-found/index.js":"26","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/new-thread/index.js":"27","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/actions/index.js":"28","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/sign-up/index.js":"29"},{"size":597,"mtime":1616557670000,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1616483558000,"results":"32","hashOfConfig":"31"},{"size":1897,"mtime":1617150764837,"results":"33","hashOfConfig":"31"},{"size":1304,"mtime":1616564689000,"results":"34","hashOfConfig":"31"},{"size":2503,"mtime":1616564598000,"results":"35","hashOfConfig":"31"},{"size":374,"mtime":1616562878000,"results":"36","hashOfConfig":"31"},{"size":513,"mtime":1617144074782,"results":"37","hashOfConfig":"31"},{"size":2102,"mtime":1617150233737,"results":"38","hashOfConfig":"31"},{"size":106,"mtime":1617135383542,"results":"39","hashOfConfig":"31"},{"size":110,"mtime":1617135410406,"results":"40","hashOfConfig":"31"},{"size":341,"mtime":1617145463185,"results":"41","hashOfConfig":"31"},{"size":228,"mtime":1606091482000,"results":"42","hashOfConfig":"31"},{"size":870,"mtime":1617149874437,"results":"43","hashOfConfig":"31"},{"size":748,"mtime":1606091482000,"results":"44","hashOfConfig":"31"},{"size":5098,"mtime":1606091482000,"results":"45","hashOfConfig":"31"},{"size":540,"mtime":1617145927452,"results":"46","hashOfConfig":"31"},{"size":1124,"mtime":1617146450359,"results":"47","hashOfConfig":"31"},{"size":1331,"mtime":1617146391372,"results":"48","hashOfConfig":"31"},{"size":4697,"mtime":1617148062635,"results":"49","hashOfConfig":"31"},{"size":824,"mtime":1617145999258,"results":"50","hashOfConfig":"31"},{"size":171,"mtime":1606091482000,"results":"51","hashOfConfig":"31"},{"size":1151,"mtime":1617146969205,"results":"52","hashOfConfig":"31"},{"size":386,"mtime":1617147504287,"results":"53","hashOfConfig":"31"},{"size":1568,"mtime":1617147619967,"results":"54","hashOfConfig":"31"},{"size":778,"mtime":1617150049740,"results":"55","hashOfConfig":"31"},{"size":116,"mtime":1606091482000,"results":"56","hashOfConfig":"31"},{"size":2435,"mtime":1617148327410,"results":"57","hashOfConfig":"31"},{"size":1030,"mtime":1617149892869,"results":"58","hashOfConfig":"31"},{"size":2302,"mtime":1617145338053,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"15swulx",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/index.js",[],["125","126"],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/reportWebVitals.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/App.js",["127","128","129"],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/details-screen.js",["130","131"],"import React, {useEffect, useState} from 'react'\nimport {useHistory, useParams} from \"react-router-dom\";\nimport movieService from '../services/movie-service'\n\nconst DetailsScreen = () => {\n    const {imdbID} = useParams()\n    const history = useHistory()\n    const [movie, setMovie] = useState({})\n    useEffect(() => {\n        findMovieByImdbID()\n    }, [])\n    const findMovieByImdbID = () => {\n        movieService.findMovieByImdbID(imdbID)\n            .then((data) => {\n                setMovie(data)\n            })\n    }\n    return(\n        <div>\n            <button onClick={() => {history.goBack()}}>Back</button>\n            <h1>{movie.Title}</h1>\n            <p>\n                <img src={movie.Poster} width={150} style={{float: \"right\"}}/>\n                {movie.Plot}\n            </p>\n            <div>\n                {movie.Actors}\n                <ul>\n                    {\n                        movie.Actors && movie.Actors.split(\",\")\n                            .map((actor) => {\n                                return(\n                                    <li>{actor}</li>\n                                )\n                        })\n                    }\n                </ul>\n            </div>\n            {JSON.stringify(movie)}\n        </div>\n    )\n}\n\nexport default DetailsScreen","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/search-screen.js",["132"],"import React, {useState, useEffect} from 'react'\nimport {Link, useParams, useHistory} from \"react-router-dom\";\nimport movieService from \"../services/movie-service\"\n\nconst SearchScreen = () => {\n    const history = useHistory()\n    const {title} = useParams()\n    const [searchTitle, setSearchTitle] = useState(title)\n    const [results, setResults] = useState({Search: []})\n    useEffect(() => {\n        setSearchTitle(title)\n        findMoviesByTitle(title)\n    }, [])\n    const findMoviesByTitle = (title) => {\n        history.push(title)\n        movieService.findMoviesByTitle(title)\n            .then((results) => {\n                setResults(results)\n            })\n    }\n    return(\n        <div>\n            <h1>Search Screen</h1>\n            <input value={searchTitle}\n                   onChange={(event) => {\n                       setSearchTitle(event.target.value)\n                   }}\n                   className=\"form-control\"/>\n            <button\n                onClick={() => {\n                    findMoviesByTitle(searchTitle)\n                }}\n                className=\"btn btn-primary\">\n                Search\n            </button>\n            <ul className=\"list-group\">\n                {\n                    results && results.Search && results.Search.map((movie) => {\n                        return (\n                            <li className=\"list-group-item\">\n                                <Link to={`/details/${movie.imdbID}`}>\n                                    {movie.Title}\n                                </Link>\n                            </li>\n                        )\n                    })\n                }\n                {/*<li className=\"list-group-item\">*/}\n                {/*    <Link to={`/details/imdbID123`}>*/}\n                {/*        Avatar*/}\n                {/*    </Link>*/}\n                {/*</li>*/}\n                {/*<li className=\"list-group-item\">*/}\n                {/*    <Link>*/}\n                {/*        Titanic*/}\n                {/*    </Link>*/}\n                {/*</li>*/}\n                {/*<li className=\"list-group-item\">*/}\n                {/*    <Link>*/}\n                {/*        Terminator 2*/}\n                {/*    </Link>*/}\n                {/*</li>*/}\n                {/*<li className=\"list-group-item\">*/}\n                {/*    <Link>*/}\n                {/*        Aliens*/}\n                {/*    </Link>*/}\n                {/*</li>*/}\n            </ul>\n        </div>\n    )\n}\n\nexport default SearchScreen","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/services/movie-service.js",["133"],"const findMoviesByTitle = (title) => {\n    return fetch(`http://www.omdbapi.com/?s=${title}&apikey=4a249f8d`)\n        .then(response => response.json())\n}\n\nconst findMovieByImdbID = (imdbID) => {\n    return fetch(`http://www.omdbapi.com/?i=${imdbID}&apikey=4a249f8d`)\n        .then(response => response.json())\n}\n\n\nexport default {\n    findMoviesByTitle, findMovieByImdbID\n}","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/useToken.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/Login/Login.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/Dashboard/Dashboard.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/Preferences/Preferences.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/user.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/actions/env.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/services/user.service.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/services/cookie.service.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/serviceWorker.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/authenticated-route/index.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/header/index.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/footer/index.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/home-screen.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/thread.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/page-head/index.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/search-bar/index.js",["134"],"import React, { useEffect, useRef } from \"react\";\nimport \"./search-bar.css\";\n\nconst SearchBar = (props) => {\n  const inputRef = useRef();\n  const SearchButtonRef = useRef();\n\n  const triggerEvent = (event) => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      SearchButtonRef.current.click();\n    }\n  };\n// Setup search\n  const initialSetup = () => {\n    if (inputRef.current) {\n      inputRef.current.addEventListener(\"keyup\", triggerEvent);\n      return () => {\n        inputRef.current.removeEventListener(\"keyup\", triggerEvent);\n      };\n    }\n  };\n\n  useEffect(initialSetup, []);\n\n  return (\n    <div className=\"search-bar\">\n      <input\n        ref={inputRef}\n        id=\"search\"\n        alt=\"search\"\n        name=\"search\"\n        placeholder=\"Search for a post\"\n        aria-label=\"Search for post\"\n        type=\"text\"\n        value={props.value}\n        onChange={(event) => props.onSearch(event.target.value)}\n      ></input>\n      <button\n        ref={SearchButtonRef}\n        aria-label=\"Search in Posts\"\n        onClick={props.search}\n      >\n        Search\n      </button>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/thread-list/index.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/thread/index.js",["135"],"import React, { useEffect, useState } from \"react\";\nimport \"./thread.css\";\nimport { Link } from \"react-router-dom\";\nimport { convertDateToFromNow } from \"../../actions/helper\";\n\nconst Thread = (props) => {\n  const [date, setDate] = useState(\"\");\n\n  const initialSetup = () => {\n    setDate(convertDateToFromNow(props.thread.created));\n  };\n\n  useEffect(initialSetup, []);\n\n  const htmlContent = (\n    <div className=\"container\">\n      <div className=\"content\">\n        <div className=\"subject\">\n          {props.titleOfPage ? (\n            <h1>{props.thread.subject}</h1>\n          ) : (\n            <h2>{props.thread.subject}</h2>\n          )}\n        </div>\n        <div className=\"date\">\n          Created by {props.thread.user.name} {date}\n        </div>\n        <div className=\"tags\">\n          Tags:{\" \"}\n          {props.thread.tags &&\n          props.thread.tags.length &&\n          Array.isArray(props.thread.tags)\n            ? props.thread.tags.map((tag, index) => (\n                <span key={index}>{tag}</span>\n              ))\n            : \"\"}\n        </div>\n      </div>\n      <div className=\"comments vertical-centering\">\n        <p>{props.thread.count - 1} comments</p>\n      </div>\n    </div>\n  );\n\n  if (props.clickable) {\n    return (\n      <Link\n        className=\"thread\"\n        to={{\n          pathname: \"/thread/\" + props.thread.id,\n          state: { threadId: props.thread.id },\n        }}\n      >\n        {htmlContent}\n      </Link>\n    );\n  } else {\n    return <div className=\"thread\">{htmlContent}</div>;\n  }\n};\n\nexport default Thread;\n","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/actions/helper.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/not-found/index.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/models/new-thread/index.js",["136"],"import React, { useState } from \"react\";\nimport \"./new-thread.css\";\nimport { addThread } from \"../thread\";\nimport { withRouter, Redirect } from \"react-router-dom\";\n// import TagsInput from \"react-tagsinput\";\n// Create a new Board Thread\n// Posts\nconst NewThread = (props) => {\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [error, setError] = useState(undefined);\n  const [threadId, setThreadId] = useState(undefined);\n  const [redirect, setRedirect] = useState(false);\n\n  const handleClick = () => {\n    if (subject === \"\" || message === \"\") {\n      setError(\"All fields must be filled.\");\n      return;\n    }\n\n    var payload = {\n      subject: subject,\n      message: message,\n      tags: JSON.stringify(tags),\n    };\n\n    addThread(payload)\n      .then((response) => {\n        if (response.status === 200) {\n          // link to thread page\n          setThreadId(response.data.id);\n          setRedirect(true);\n        } else if (response.status === 202) {\n          setError(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  if (redirect === true) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/thread/\" + threadId,\n          state: { threadId: threadId },\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"new-thread\">\n      <h1>Add a thread</h1>\n\n      <div>\n        <label htmlFor=\"subject\">Subject: </label>\n        <input\n    id=\"subject\"\n    alt=\"subject\"\n    name=\"subject\"\n    placeholder=\"Enter thread subject\"\n    type=\"text\"\n    onChange={(event) => setSubject(event.target.value)}\n    />\n      </div>\n\n      <div>\n        <label htmlFor=\"message\">Message: </label>\n        <textarea\n    id=\"message\"\n    alt=\"message\"\n    name=\"message\"\n    onChange={(event) => setMessage(event.target.value)}\n    />\n      </div>\n      <div>\n        <label htmlFor=\"tags\">Tags: </label>\n        {/*<TagsInput*/}\n        {/*  inputProps={{*/}\n        {/*    \"aria-label\": \"Add Tags\",*/}\n        {/*  }}*/}\n        {/*  id=\"tags\"*/}\n        {/*  value={tags}*/}\n        {/*  onChange={setTags}*/}\n        {/*/>*/}\n      </div>\n\n      <button aria-label=\"Create a New Thread Board\" onClick={handleClick}>\n        Submit\n      </button>\n\n      <div className=\"ERROR\">{error ? error : \"\"}</div>\n    </div>\n  );\n};\n\nexport default withRouter(NewThread);\n","/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/actions/index.js",[],"/Users/kurtiscruz/Desktop/GitHub/CS5610-Final_Project_COVI-FORUM/src/components/sign-up/index.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":23},{"ruleId":"141","severity":1,"message":"145","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":17},{"ruleId":"141","severity":1,"message":"146","line":9,"column":8,"nodeType":"143","messageId":"144","endLine":9,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":11,"column":8,"nodeType":"149","endLine":11,"endColumn":10,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":23,"column":17,"nodeType":"153","endLine":23,"endColumn":79},{"ruleId":"147","severity":1,"message":"154","line":13,"column":8,"nodeType":"149","endLine":13,"endColumn":10,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":12,"column":1,"nodeType":"158","endLine":14,"endColumn":2},{"ruleId":"147","severity":1,"message":"159","line":19,"column":18,"nodeType":"143","endLine":19,"endColumn":25},{"ruleId":"147","severity":1,"message":"160","line":13,"column":27,"nodeType":"149","endLine":13,"endColumn":29,"suggestions":"161"},{"ruleId":"141","severity":1,"message":"162","line":11,"column":16,"nodeType":"143","messageId":"144","endLine":11,"endColumn":23},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","'Preferences' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'findMovieByImdbID'. Either include it or remove the dependency array.","ArrayExpression",["165"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'findMoviesByTitle' and 'title'. Either include them or remove the dependency array.",["166"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","The ref value 'inputRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'inputRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'props.thread.created'. Either include it or remove the dependency array. If 'setDate' needs the current value of 'props.thread.created', you can also switch to useReducer instead of useState and read 'props.thread.created' in the reducer.",["167"],"'setTags' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [findMovieByImdbID]",{"range":"174","text":"175"},"Update the dependencies array to be: [findMoviesByTitle, title]",{"range":"176","text":"177"},"Update the dependencies array to be: [props.thread.created]",{"range":"178","text":"179"},[355,357],"[findMovieByImdbID]",[466,468],"[findMoviesByTitle, title]",[367,369],"[props.thread.created]"]